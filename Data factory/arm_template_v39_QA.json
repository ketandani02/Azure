{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "USCQINT07PDFA01"
        },        
        "TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_Username": {
            "type": "string",
            "defaultValue": "mitsa"
        },
        "TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_Password": {
            "type": "string",
            "defaultValue": "mitsap"
        },
        "TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_SourcePath": {
            "type": "string",
            "defaultValue": "Engagements/CTP-Offering/COPA/USCQINT07PRSG01/QA-COPABulkUtil-02"
        },
        "TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_ConnectionString": {
            "type": "string",
            "defaultValue": "msistore"
        },
        "TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_DestinationPath": {
            "type": "string",
            "defaultValue": "client2"
        },
        "TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_Temporary_Storage": {
            "type": "string",
            "defaultValue": "client2-temp"
        },
        "TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_Database_Name": {
            "type": "string",
            "defaultValue": "USCQINT07PSDB02"
        },
        "TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_Database_Domain_Name": {
            "type": "string",
            "defaultValue": "uscpint000sql01.database.windows.net"
        },
        "TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_Temp_Database_Name": {
            "type": "string",
            "defaultValue": "USCQINT07PSDB02"
        },
        "TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_Temp_Database_Domain_Name": {
            "type": "string",
            "defaultValue": "uscpint000sql01.database.windows.net"
        },
        "TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_API_Username": {
            "type": "string",
            "defaultValue": "Q.COPAADF.01"
        },
        "TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_API_Password": {
            "type": "string",
            "defaultValue": "#`jW`nG%5Yd':huv"
        },
        "TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_Base_Database_Name": {
            "type": "string",
            "defaultValue": "USCQINT07PSDB01"
        },
        "TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_Base_Database_Domain_Name": {
            "type": "string",
            "defaultValue": "uscpint000sql01.database.windows.net"
        },
        "TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_Username": {
            "type": "string",
            "defaultValue": "mitsa"
        },
        "TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_Password": {
            "type": "string",
            "defaultValue": "mitsap"
        },
      "TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_SourcePath": {
        "type": "string",
        "defaultValue": "Engagements/CTP-Offering/COPA/USCQINT07PRSG01/QA-COPABulkUtil-01"
      },
        "TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_ConnectionString": {
            "type": "string",
            "defaultValue": "msistore"
        },
        "TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_DestinationPath": {
            "type": "string",
            "defaultValue": "client1"
        },
        "TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_Temporary_Storage": {
            "type": "string",
            "defaultValue": "client1-temp"
        },
        "TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_Database_Name": {
            "type": "string",
            "defaultValue": "USCQINT07PSDB02"
        },
        "TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_Database_Domain_Name": {
            "type": "string",
            "defaultValue": "uscpint000sql01.database.windows.net"
        },
        "TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_Temp_Database_Name": {
            "type": "string",
            "defaultValue": "USCQINT07PSDB02"
        },
        "TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_Temp_Database_Domain_Name": {
            "type": "string",
            "defaultValue": "uscpint000sql01.database.windows.net"
        },
        "TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_API_Username": {
            "type": "string",
            "defaultValue": "Q.COPAADF.01"
        },
        "TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_API_Password": {
            "type": "string",
            "defaultValue": "#`jW`nG%5Yd':huv"
        },
        "TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_Base_Database_Name": {
            "type": "string",
            "defaultValue": "USCQINT07PSDB01"
        },
        "TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_Base_Database_Domain_Name": {
            "type": "string",
            "defaultValue": "uscpint000sql01.database.windows.net"
        },
        "TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_Username": {
            "type": "string",
            "defaultValue": "mitsa"
        },
        "TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_Password": {
            "type": "string",
            "defaultValue": "mitsap"
        },
        "TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_SourcePath": {
            "type": "string",
            "defaultValue": "Engagements/CTP-Offering/COPA/USCQINT07PRSG01/QA-COPABulkUtil-03"
        },
        "TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_ConnectionString": {
            "type": "string",
            "defaultValue": "msistore"
        },
        "TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_DestinationPath": {
            "type": "string",
            "defaultValue": "client3"
        },
        "TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_Temporary_Storage": {
            "type": "string",
            "defaultValue": "client3-temp"
        },
        "TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_Database_Name": {
            "type": "string",
            "defaultValue": "USCQINT07PSDB02"
        },
        "TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_Database_Domain_Name": {
            "type": "string",
            "defaultValue": "uscpint000sql01.database.windows.net"
        },
        "TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_Temp_Database_Name": {
            "type": "string",
            "defaultValue": "USCQINT07PSDB02"
        },
        "TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_Temp_Database_Domain_Name": {
            "type": "string",
            "defaultValue": "uscpint000sql01.database.windows.net"
        },
        "TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_API_Username": {
            "type": "string",
            "defaultValue": "Q.COPAADF.01"
        },
        "TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_API_Password": {
            "type": "string",
            "defaultValue": "#`jW`nG%5Yd':huv"
        },
        "TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_Base_Database_Name": {
            "type": "string",
            "defaultValue": "USCQINT07PSDB01"
        },
        "TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_Base_Database_Domain_Name": {
            "type": "string",
            "defaultValue": "uscpint000sql01.database.windows.net"
        },
        "TGR_Run_Rules_Engine_properties_PL_Trigger_Rules_Engine_parameters_Base_Database_Name": {
            "type": "string",
            "defaultValue": "USCQINT07PSDB01"
        },
        "TGR_Run_Rules_Engine_properties_PL_Trigger_Rules_Engine_parameters_Base_Database_Domain_Name": {
            "type": "string",
            "defaultValue": "uscpint000sql01.database.windows.net"
        },
        "TGR_Run_Rules_Engine_properties_PL_Trigger_Rules_Engine_parameters_Azure_Function_Name": {
            "type": "string",
            "defaultValue": "C_RuleEngineActivator"
        },
        "linkedServcie_FileStorage_properties_typeProperties_host": {
            "type": "string",
            "defaultValue": "\\\\uscqint07psta01.file.core.windows.net\\poc-adf"
        },
        "linkedServcie_FileStorage_properties_typeProperties_userId": {
            "type": "string",
            "defaultValue": "AZURE\\uscqint07psta01"
        },
        "RestService1_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://sftp-am.sbp.eyclienthub.com/"
        },
        "RestService1_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "copa.dev.moveit"
        },
        "HttpServer1_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://sftp-am.sbp.eyclienthub.com/api/v1/files/564673156/download"
        },
        "MoveIt_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://sftp-am.sbp.eyclienthub.com/api/v1/"
        },
        "AzureSqlDatabase_properties_typeProperties_servicePrincipalId": {
            "type": "string",
            "defaultValue": "67b47365-8392-479d-9933-10e7fda6ee8a"
        },
        "AzureSqlDatabase_properties_typeProperties_tenant": {
            "type": "string",
            "defaultValue": "5b973f99-77df-4beb-b27d-aa0c70b8482c"
        },
        "linkedService1_properties_typeProperties_host": {
            "type": "string",
            "defaultValue": "51.141.226.57"
        },
        "linkedService1_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "Q.COPAADF.01                "
        },
        "LS_MoveIt_properties_typeProperties_host": {
            "type": "string",
            "defaultValue": "sftp-ssh-am.sbp.eyclienthub.com"
        },
        "LS_MoveIt_properties_typeProperties_userName": {
            "type": "object",
            "defaultValue": {
                "type": "AzureKeyVaultSecret",
                "store": {
                    "referenceName": "LS_AKV",
                    "type": "LinkedServiceReference"
                },
                "secretName": "@{linkedService().MoveIt_Username_Secret}"
            }
        },
        "LS_ABLB_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "@{linkedService().Azure_Blob_Secret}"
        },
        "LS_AKV_properties_typeProperties_baseUrl": {
            "type": "string",
            "defaultValue": "https://uscqint07pakv01.vault.azure.net/"
        },
        "LS_MoveIt_ListingFIles_properties_typeProperties_host": {
            "type": "string",
            "defaultValue": "sftp-ssh-am.sbp.eyclienthub.com"
        },
        "LS_MoveIt_ListingFIles_properties_typeProperties_userName": {
            "type": "object",
            "defaultValue": {
                "type": "AzureKeyVaultSecret",
                "store": {
                    "referenceName": "LS_AKV",
                    "type": "LinkedServiceReference"
                },
                "secretName": "@{linkedService().MoveIt_Username_Secret}"
            }
        },
        "AzureSqlDatabase_Base_Database_properties_typeProperties_servicePrincipalId": {
            "type": "string",
            "defaultValue": "03d93594-888a-4563-a9ad-c3449a53300b"
        },
        "AzureSqlDatabase_Base_Database_properties_typeProperties_tenant": {
            "type": "string",
            "defaultValue": "5b973f99-77df-4beb-b27d-aa0c70b8482c"
        },
        "AzureBlob1_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "poc-adf"
        },
        "DS_SFTP_MoveIt_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "@dataset().MoveIt_Filename"
        },
        "DS_SFTP_MoveIt_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "@dataset().MoveIt_Source_FilePath"
        },
        "DS_ABLB_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": ""
        },
        "DS_ABLB_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "@dataset().Azure_Blob_FilePath"
        },
        "DS_MoveIt_ListingFiles_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "@dataset().MoveIt_Source_Path"
        },
        "DS_ABLB_CSV_Protocol_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "@dataset().Filename"
        },
        "DS_ABLB_CSV_Protocol_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "@dataset().SourcePath"
        },
        "DS_ABLB_CSV_Header_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "@dataset().Filename"
        },
        "DS_ABLB_CSV_Header_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "@dataset().Azure_File_Path"
        },
        "DS_ABLB_CSV_DynamicColumn_properties_typeProperties_fileName": {
            "type": "string",
            "defaultValue": "@dataset().Filename"
        },
        "DS_ABLB_CSV_DynamicColumn_properties_typeProperties_folderPath": {
            "type": "string",
            "defaultValue": "@dataset().SourcePath"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/TGR_MoveFiles_Client2')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "PL_DATA_MoveIt_To_ABLB",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "MoveIt_Username": "[parameters('TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_Username')]",
                            "MoveIt_Password": "[parameters('TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_Password')]",
                            "MoveIt_SourcePath": "[parameters('TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_SourcePath')]",
                            "AzureBlob_ConnectionString": "[parameters('TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_ConnectionString')]",
                            "AzureBlob_DestinationPath": "[parameters('TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_DestinationPath')]",
                            "AzureBlob_Temporary_Storage": "[parameters('TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_Temporary_Storage')]",
                            "Database_Name": "[parameters('TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_Database_Name')]",
                            "Database_Domain_Name": "[parameters('TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_Database_Domain_Name')]",
                            "Temp_Database_Name": "[parameters('TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_Temp_Database_Name')]",
                            "Temp_Database_Domain_Name": "[parameters('TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_Temp_Database_Domain_Name')]",
                            "MoveIt_API_Username": "[parameters('TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_API_Username')]",
                            "MoveIt_API_Password": "[parameters('TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_API_Password')]",
                            "Base_Database_Name": "[parameters('TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_Base_Database_Name')]",
                            "Base_Database_Domain_Name": "[parameters('TGR_MoveFiles_Client2_properties_PL_DATA_MoveIt_To_ABLB_parameters_Base_Database_Domain_Name')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2019-11-17T13:00:00Z",
                        "timeZone": "UTC",
                        "schedule": {
                            "minutes": [
                                0
                            ],
                            "hours": [
                                13
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/PL_DATA_MoveIt_To_ABLB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TGR_MoveFiles_Client1')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "PL_DATA_MoveIt_To_ABLB",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "MoveIt_Username": "[parameters('TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_Username')]",
                            "MoveIt_Password": "[parameters('TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_Password')]",
                            "MoveIt_SourcePath": "[parameters('TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_SourcePath')]",
                            "AzureBlob_ConnectionString": "[parameters('TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_ConnectionString')]",
                            "AzureBlob_DestinationPath": "[parameters('TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_DestinationPath')]",
                            "AzureBlob_Temporary_Storage": "[parameters('TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_Temporary_Storage')]",
                            "Database_Name": "[parameters('TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_Database_Name')]",
                            "Database_Domain_Name": "[parameters('TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_Database_Domain_Name')]",
                            "Temp_Database_Name": "[parameters('TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_Temp_Database_Name')]",
                            "Temp_Database_Domain_Name": "[parameters('TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_Temp_Database_Domain_Name')]",
                            "MoveIt_API_Username": "[parameters('TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_API_Username')]",
                            "MoveIt_API_Password": "[parameters('TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_API_Password')]",
                            "Base_Database_Name": "[parameters('TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_Base_Database_Name')]",
                            "Base_Database_Domain_Name": "[parameters('TGR_MoveFiles_Client1_properties_PL_DATA_MoveIt_To_ABLB_parameters_Base_Database_Domain_Name')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2019-11-17T13:00:00Z",
                        "timeZone": "UTC",
                        "schedule": {
                            "minutes": [
                                0
                            ],
                            "hours": [
                                13
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/PL_DATA_MoveIt_To_ABLB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TGR_MoveFiles_Client3')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "PL_DATA_MoveIt_To_ABLB",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "MoveIt_Username": "[parameters('TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_Username')]",
                            "MoveIt_Password": "[parameters('TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_Password')]",
                            "MoveIt_SourcePath": "[parameters('TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_SourcePath')]",
                            "AzureBlob_ConnectionString": "[parameters('TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_ConnectionString')]",
                            "AzureBlob_DestinationPath": "[parameters('TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_DestinationPath')]",
                            "AzureBlob_Temporary_Storage": "[parameters('TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_AzureBlob_Temporary_Storage')]",
                            "Database_Name": "[parameters('TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_Database_Name')]",
                            "Database_Domain_Name": "[parameters('TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_Database_Domain_Name')]",
                            "Temp_Database_Name": "[parameters('TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_Temp_Database_Name')]",
                            "Temp_Database_Domain_Name": "[parameters('TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_Temp_Database_Domain_Name')]",
                            "MoveIt_API_Username": "[parameters('TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_API_Username')]",
                            "MoveIt_API_Password": "[parameters('TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_MoveIt_API_Password')]",
                            "Base_Database_Name": "[parameters('TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_Base_Database_Name')]",
                            "Base_Database_Domain_Name": "[parameters('TGR_MoveFiles_Client3_properties_PL_DATA_MoveIt_To_ABLB_parameters_Base_Database_Domain_Name')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2019-11-17T13:00:00Z",
                        "timeZone": "UTC",
                        "schedule": {
                            "minutes": [
                                0
                            ],
                            "hours": [
                                13
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/PL_DATA_MoveIt_To_ABLB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TGR_Run_Rules_Engine')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "PL_Trigger_Rules_Engine",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "Base_Database_Name": "[parameters('TGR_Run_Rules_Engine_properties_PL_Trigger_Rules_Engine_parameters_Base_Database_Name')]",
                            "Base_Database_Domain_Name": "[parameters('TGR_Run_Rules_Engine_properties_PL_Trigger_Rules_Engine_parameters_Base_Database_Domain_Name')]",
                            "Azure_Function_Name": "[parameters('TGR_Run_Rules_Engine_properties_PL_Trigger_Rules_Engine_parameters_Azure_Function_Name')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2019-11-19T13:30:00Z",
                        "timeZone": "UTC",
                        "schedule": {
                            "minutes": [
                                30
                            ],
                            "hours": [
                                13
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/PL_Trigger_Rules_Engine')]"
            ]
        },        
        {
            "name": "[concat(parameters('factoryName'), '/HttpServer1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "HttpServer",
                "typeProperties": {
                    "url": "[parameters('HttpServer1_properties_typeProperties_url')]",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "Anonymous"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/MoveIt')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "HttpServer",
                "typeProperties": {
                    "url": "[parameters('MoveIt_properties_typeProperties_url')]",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "Anonymous"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "Database_Name": {
                        "type": "string"
                    },
                    "Database_Domain_Name": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlDatabase",
              "typeProperties": {
                "connectionString": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=@{linkedService().Database_Domain_Name};Initial Catalog=@{linkedService().Database_Name}",
                "servicePrincipalId": "[parameters('AzureSqlDatabase_properties_typeProperties_servicePrincipalId')]",
                "servicePrincipalKey": {
                  "type": "AzureKeyVaultSecret",
                  "store": {
                    "referenceName": "LS_AKV",
                    "type": "LinkedServiceReference"
                  },
                  "secretName": "COPA-DB-AD-CLIENT-SECRET"
                },
                "tenant": "[parameters('AzureSqlDatabase_properties_typeProperties_tenant')]"
              }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_AKV')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_MoveIt')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "Sftp",
                "parameters": {
                    "MoveIt_Username_Secret": {
                        "type": "String"
                    },
                    "MoveIt_Password_Secret": {
                        "type": "String"
                    }
                },
                "typeProperties": {
                    "host": "[parameters('LS_MoveIt_properties_typeProperties_host')]",
                    "port": "22",
                    "skipHostKeyValidation": true,
                    "authenticationType": "Basic",
                    "userName": "[parameters('LS_MoveIt_properties_typeProperties_userName')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS_AKV",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "@{linkedService().MoveIt_Password_Secret}"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_AKV')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_ABLB')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "AzureBlobStorage",
                "parameters": {
                    "Azure_Blob_Secret": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS_AKV",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "[parameters('LS_ABLB_properties_typeProperties_connectionString_secretName')]"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_AKV')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_AKV')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[parameters('LS_AKV_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_MoveIt_ListingFIles')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "Sftp",
                "parameters": {
                    "MoveIt_Username_Secret": {
                        "type": "String"
                    },
                    "MoveIt_Password_Secret": {
                        "type": "String"
                    }
                },
                "typeProperties": {
                    "host": "[parameters('LS_MoveIt_ListingFIles_properties_typeProperties_host')]",
                    "port": "22",
                    "skipHostKeyValidation": true,
                    "authenticationType": "Basic",
                    "userName": "[parameters('LS_MoveIt_ListingFIles_properties_typeProperties_userName')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS_AKV",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "@{linkedService().MoveIt_Password_Secret}"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_AKV')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_Temporary_Database')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "Temp_Database_Name": {
                        "type": "string"
                    },
                    "Temp_Database_Domain_Name": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlDatabase",
              "typeProperties": {
                "connectionString": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=@{linkedService().Temp_Database_Domain_Name};Initial Catalog=@{linkedService().Temp_Database_Name}",
                "servicePrincipalId": "[parameters('AzureSqlDatabase_Base_Database_properties_typeProperties_servicePrincipalId')]",
                "servicePrincipalKey": {
                  "type": "AzureKeyVaultSecret",
                  "store": {
                    "referenceName": "LS_AKV",
                    "type": "LinkedServiceReference"
                  },
                  "secretName": "COPA-DB-AD-CLIENT-SECRET"
                },
                "tenant": "[parameters('AzureSqlDatabase_Base_Database_properties_typeProperties_tenant')]"
              }            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_Base_Database')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "Base_Database_Name": {
                        "type": "string",
                        "defaultValue": "USCQINT07PSDB01"
                    },
                    "Base_Database_Domain_Name": {
                        "type": "string",
                        "defaultValue": "uscpint000sql01.database.windows.net"
                    }
                },
                "annotations": [],
                "type": "AzureSqlDatabase",
              "typeProperties": {
                "connectionString": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=@{linkedService().Base_Database_Domain_Name};Initial Catalog=@{linkedService().Base_Database_Name}",
                "servicePrincipalId": "[parameters('AzureSqlDatabase_Base_Database_properties_typeProperties_servicePrincipalId')]",
                "servicePrincipalKey": {
                  "type": "AzureKeyVaultSecret",
                  "store": {
                    "referenceName": "LS_AKV",
                    "type": "LinkedServiceReference"
                  },
                  "secretName": "COPA-DB-AD-CLIENT-SECRET"
                },
                "tenant": "[parameters('AzureSqlDatabase_Base_Database_properties_typeProperties_tenant')]"
              }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_AKV')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_Azure_Functions')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureFunction",
                "typeProperties": {
                    "functionAppUrl": "https://uscqint07pazf01.azurewebsites.net",
                    "functionKey": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS_AKV",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "K-RuleEngineActivation"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_AKV')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AZ_')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureFunction",
                "typeProperties": {
                    "functionAppUrl": "https://uscqint07pazf02.azurewebsites.net/",
                    "functionKey": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS_AKV",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "K-CsvFileValidator"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_AKV')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AF_Trigger_Email')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureFunction",
                "typeProperties": {
                    "functionAppUrl": "https://uscqint07pazf02.azurewebsites.net/",
                    "functionKey": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS_AKV",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "K-EmailNotifications"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_AKV')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/HttpFile1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "HttpServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "HttpFile",
                "typeProperties": {
                    "format": {
                        "type": "TextFormat",
                        "columnDelimiter": ",",
                        "rowDelimiter": "",
                        "nullValue": "\\N",
                        "treatEmptyAsNull": true,
                        "skipLineCount": 0,
                        "firstRowAsHeader": false
                    },
                    "requestMethod": "GET"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/HttpServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_SFTP_MoveIt')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS_MoveIt",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "MoveIt_Username_Secret": "mitsa",
                        "MoveIt_Password_Secret": "mitsap"
                    }
                },
                "parameters": {
                    "MoveIt_Username_Secret": {
                        "type": "string"
                    },
                    "MoveIt_Password_Secret": {
                        "type": "string"
                    },
                    "MoveIt_Source_FilePath": {
                        "type": "string"
                    },
                    "MoveIt_Filename": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "FileShare",
                "typeProperties": {
                    "fileName": {
                        "value": "[parameters('DS_SFTP_MoveIt_properties_typeProperties_fileName')]",
                        "type": "Expression"
                    },
                    "folderPath": {
                        "value": "[parameters('DS_SFTP_MoveIt_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_MoveIt')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ABLB')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Azure Blob storageBlob",
                "linkedServiceName": {
                    "referenceName": "LS_ABLB",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Azure_Blob_Secret": {
                            "value": "@dataset().Azure_Blob_Secret",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "Azure_Blob_FilePath": {
                        "type": "string"
                    },
                    "Azure_Blob_Secret": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureBlob",
                "typeProperties": {
                    "fileName": "[parameters('DS_ABLB_properties_typeProperties_fileName')]",
                    "folderPath": {
                        "value": "[parameters('DS_ABLB_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_ABLB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_MoveIt_ListingFiles')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS_MoveIt_ListingFIles",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "MoveIt_Username_Secret": {
                            "value": "@dataset().MoveIt_Username_Secret",
                            "type": "Expression"
                        },
                        "MoveIt_Password_Secret": {
                            "value": "@dataset().MoveIt_Password_Secret",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "MoveIt_Username_Secret": {
                        "type": "string"
                    },
                    "MoveIt_Password_Secret": {
                        "type": "string"
                    },
                    "MoveIt_Source_Path": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "FileShare",
                "typeProperties": {
                    "folderPath": {
                        "value": "[parameters('DS_MoveIt_ListingFiles_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_MoveIt_ListingFIles')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ASQL')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Database_Name": {
                            "value": "@dataset().Database_Name",
                            "type": "Expression"
                        },
                        "Database_Domain_Name": {
                            "value": "@dataset().Database_Domain_Name",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "Database_Name": {
                        "type": "string"
                    },
                    "Database_Domain_Name": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "CDAGSCD_EY_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "CLIENT_REF_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "CLIENT_SRC_REF_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "SRC_FILE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "PROTOCOL_REF_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "SCD_BNFIT_FIRST_NM",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_BNFIT_LAST_NM",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_ENRLMNT_EFFCTV_DT",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_CARD_HLDR_ID",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_ORG_CNTRCT_ID",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_ORG_PLN_ID",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_LONGTRM_CARE_FLAG",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_RQST_RCVD_DT",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_RQST_RCVD_TM",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_AOR_RQUIRED_FLAG",
                        "type": "char"
                    },
                    {
                        "name": "SCD_AOR_RCPT_DT",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_AOR_RCPT_TM",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_ISSU_DESC",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_NDC_II",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_DRUGNM_STRNGHT_DSAGE_DESC",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_PRTECTD_CLASS_DRUG_FLAG",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_RQST_TMFRAM_EXPED_STD_FLAG",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_RQST_DISPOSITN",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_RQST_DENIED_RSN_FLAG",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_RQST_DENIEDRSN_REVWD_FLAG",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_PLN_DECISN_DT",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_PLN_DECISN_TM",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_PLN_EFFTUCTD_SYS_DT",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_PLN_EFFTUCTD_SYS_TM",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_ORAL_NOTIF_2ENRLEE_DT",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_ORAL_NOTIF_2ENRLEE_TM",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_WRTTN_NOTIF_2ENRLEE_DT",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_WRTTN_NOTIF_2ENRLEE_TM",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_SNT_2IRE_DT",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_SNT_2IRE_TM",
                        "type": "varchar"
                    },
                    {
                        "name": "SCD_ENRLE_NOTYRQST_SNT2IRE_DT",
                        "type": "varchar"
                    },
                    {
                        "name": "CREATED_BY_USRNM",
                        "type": "varchar"
                    },
                    {
                        "name": "CREATED_DT_TM",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "LAST_UPDATED_BY_USRNM",
                        "type": "varchar"
                    },
                    {
                        "name": "LAST_UPDATED_DT_TM",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "tableName": "[[dbo].[USER_DEFINED_UNVRSE_BASE]"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ABLB_CSV_Protocol')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS_ABLB",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Azure_Blob_Secret": {
                            "value": "@dataset().ConnectionString",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "ConnectionString": {
                        "type": "string",
                        "defaultValue": "msistore"
                    },
                    "SourcePath": {
                        "type": "string",
                        "defaultValue": "client2"
                    },
                    "Filename": {
                        "type": "string",
                        "defaultValue": "Tag.csv"
                    }
                },
                "annotations": [],
                "type": "AzureBlob",
                "typeProperties": {
                    "format": {
                        "type": "TextFormat",
                        "columnDelimiter": ",",
                        "rowDelimiter": "",
                        "quoteChar": "\"",
                        "treatEmptyAsNull": false,
                        "firstRowAsHeader": true
                    },
                    "fileName": {
                        "value": "[parameters('DS_ABLB_CSV_Protocol_properties_typeProperties_fileName')]",
                        "type": "Expression"
                    },
                    "folderPath": {
                        "value": "[parameters('DS_ABLB_CSV_Protocol_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_ABLB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ABLB_CSV_Header')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS_ABLB",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Azure_Blob_Secret": {
                            "value": "@dataset().Azure_Blob_Secret",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "Azure_Blob_Secret": {
                        "type": "string"
                    },
                    "Filename": {
                        "type": "string"
                    },
                    "Azure_File_Path": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureBlob",
                "typeProperties": {
                    "format": {
                        "type": "TextFormat",
                        "columnDelimiter": ",",
                        "rowDelimiter": "",
                        "quoteChar": "\"",
                        "treatEmptyAsNull": true,
                        "skipLineCount": 0,
                        "firstRowAsHeader": false
                    },
                    "fileName": {
                        "value": "[parameters('DS_ABLB_CSV_Header_properties_typeProperties_fileName')]",
                        "type": "Expression"
                    },
                    "folderPath": {
                        "value": "[parameters('DS_ABLB_CSV_Header_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_ABLB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ASQL_Temp')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase_Temporary_Database",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Temp_Database_Name": {
                            "value": "@dataset().Temp_Database_Name",
                            "type": "Expression"
                        },
                        "Temp_Database_Domain_Name": {
                            "value": "@dataset().Temp_Database_Domain_Name",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "Temp_Database_Name": {
                        "type": "string"
                    },
                    "Temp_Database_Domain_Name": {
                        "type": "string"
                    },
                    "Temp_Table_Name": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "tableName": {
                        "value": "@dataset().Temp_Table_Name",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Temporary_Database')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ASQL_CDAG_SCD_USER')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Database_Name": {
                            "value": "@dataset().Database_Name",
                            "type": "Expression"
                        },
                        "Database_Domain_Name": {
                            "value": "@dataset().Database_Domain_Name",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "Database_Name": {
                        "type": "string"
                    },
                    "Database_Domain_Name": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "tableName": "USER_DEFINED_UNVRSE_BASE"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ASQL_CDAG_STG')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Database_Name": {
                            "value": "@dataset().Database_Name",
                            "type": "Expression"
                        },
                        "Database_Domain_Name": {
                            "value": "@dataset().Database_Domain_Name",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "Database_Name": {
                        "type": "string"
                    },
                    "Database_Domain_Name": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "tableName": "CDAGSCD_STDCVRG_DETRM_STG"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ASQL_User_Base')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase_Base_Database",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Base_Database_Name": {
                            "value": "@dataset().Base_Database_Name",
                            "type": "Expression"
                        },
                        "Base_Database_Domain_Name": {
                            "value": "@dataset().Base_Database_Domain_Name",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "Base_Database_Name": {
                        "type": "string"
                    },
                    "Base_Database_Domain_Name": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "tableName": "USER_DEFINED_UNVRSE_BASE"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Base_Database')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ASQL_LOG_FILE_BASE')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase_Base_Database",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Base_Database_Name": "USCQINT07PSDB01",
                        "Base_Database_Domain_Name": "uscpint000sql01.database.windows.net"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "tableName": "LOAD_FILE_LOG_BASE"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Base_Database')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ASQL_BASE')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase_Base_Database",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Base_Database_Name": "USCQINT07PSDB01",
                        "Base_Database_Domain_Name": "uscpint000sql01.database.windows.net"
                    }
                },
                "parameters": {
                    "Base_Database_Name": {
                        "type": "string"
                    },
                    "Base_Database_Domain_Name": {
                        "type": "string"
                    },
                    "Table_Name": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "tableName": {
                        "value": "@dataset().Table_Name",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Base_Database')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ASQL_CDAG_SCD_BASE')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase_Base_Database",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Base_Database_Name": {
                            "value": "@dataset().Base_Database_Name",
                            "type": "Expression"
                        },
                        "Base_Database_Domain_Name": {
                            "value": "@dataset().Base_Database_Domain_Name",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "Base_Database_Name": {
                        "type": "string"
                    },
                    "Base_Database_Domain_Name": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "tableName": "CDAGSCD_STDCVRG_DETRM_BASE"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Base_Database')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ASQL_STG')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Database_Name": {
                            "value": "@dataset().Database_Name",
                            "type": "Expression"
                        },
                        "Database_Domain_Name": {
                            "value": "@dataset().Database_Domain_Name",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "Database_Name": {
                        "type": "string",
                        "defaultValue": "USCQINT07PSDB02"
                    },
                    "Database_Domain_Name": {
                        "type": "string",
                        "defaultValue": "uscpint000sql01.database.windows.net"
                    },
                    "Table_Name": {
                        "type": "string",
                        "defaultValue": "[[dbo].[CDAGSCD_STDCVRG_DETRM_STG]"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "tableName": {
                        "value": "@dataset().Table_Name",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ASQL_Client_Source_Temp')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase_Temporary_Database",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Temp_Database_Name": {
                            "value": "@dataset().Temp_Database_Name",
                            "type": "Expression"
                        },
                        "Temp_Database_Domain_Name": {
                            "value": "@dataset().Temp_Database_Domain_Name",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "Temp_Database_Name": {
                        "type": "string"
                    },
                    "Temp_Database_Domain_Name": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "tableName": "CLIENT_SRC_REF"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Temporary_Database')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ABLB_CSV_DynamicColumn')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS_ABLB",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Azure_Blob_Secret": {
                            "value": "@dataset().ConnectionString",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "ConnectionString": {
                        "type": "string"
                    },
                    "SourcePath": {
                        "type": "string"
                    },
                    "Filename": {
                        "type": "string"
                    },
                    "Structure": {
                        "type": "object"
                    }
                },
                "annotations": [],
                "type": "AzureBlob",
                "structure": {
                    "value": "@dataset().Structure",
                    "type": "Expression"
                },
                "typeProperties": {
                    "format": {
                        "type": "TextFormat",
                        "columnDelimiter": ",",
                        "rowDelimiter": "",
                        "nullValue": "\\N",
                        "treatEmptyAsNull": true,
                        "skipLineCount": 0,
                        "firstRowAsHeader": true
                    },
                    "fileName": {
                        "value": "[parameters('DS_ABLB_CSV_DynamicColumn_properties_typeProperties_fileName')]",
                        "type": "Expression"
                    },
                    "folderPath": {
                        "value": "[parameters('DS_ABLB_CSV_DynamicColumn_properties_typeProperties_folderPath')]",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_ABLB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ASQL_Temp_DynamicStructure')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase_Temporary_Database",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Temp_Database_Name": {
                            "value": "@dataset().Temp_Database_Name",
                            "type": "Expression"
                        },
                        "Temp_Database_Domain_Name": {
                            "value": "@dataset().Temp_Database_Domain_Name",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "Temp_Database_Name": {
                        "type": "string"
                    },
                    "Temp_Database_Domain_Name": {
                        "type": "string"
                    },
                    "Temp_Table_Name": {
                        "type": "string"
                    },
                    "Structure": {
                        "type": "object"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "table": {
                        "value": "@dataset().Temp_Table_Name",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Temporary_Database')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pipeline1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Lookup2",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT * FROM [dbo].[CDAGSCD_STDCVRG_DETRM_BASE] ORDER BY [CREATED_DT_TM] DESC",
                                    "type": "Expression"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_ASQL",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Database_Name": "USCQINT07PSDB01",
                                    "Database_Domain_Name": "uscpint000sql01.database.windows.net"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Lookup2",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Lookup3",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECT *  FROM LOAD_FILE_EXCPTN_BASE ORDER BY LFE_CREATED_DT_TM DESC"
                            },
                            "dataset": {
                                "referenceName": "DS_ASQL_CDAG_STG",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Database_Name": "USCQINT07PSDB01",
                                    "Database_Domain_Name": "uscpint000sql01.database.windows.net"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Lookup3",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Lookup4",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECT * FROM USER_BASE"
                            },
                            "dataset": {
                                "referenceName": "DS_ASQL_CDAG_SCD_BASE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Base_Database_Name": "USCQINT07PSDB01",
                                    "Base_Database_Domain_Name": "uscpint000sql01.database.windows.net"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Lookup4",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECT *  FROM [dbo].[LOAD_FILE_LOG_BASE] order by 1 desc\n"
                            },
                            "dataset": {
                                "referenceName": "DS_ASQL_CDAG_SCD_BASE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Base_Database_Name": "USCQINT07PSDB01",
                                    "Base_Database_Domain_Name": "uscpint000sql01.database.windows.net"
                                }
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "Set Variable1",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Lookup4",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FileType",
                            "value": {
                                "value": "@activity('Lookup4').output.firstRow.PDBIZNM_CODE",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "Filename": {
                        "type": "string",
                        "defaultValue": "a1_343.xls"
                    },
                    "File_Source_Id": {
                        "type": "string"
                    },
                    "Protocol_Ref_Id": {
                        "type": "string"
                    }
                },
                "variables": {
                    "FileType": {
                        "type": "String"
                    },
                    "Table_Name": {
                        "type": "String",
                        "defaultValue": "temp_Test_583048408"
                    },
                    "FileCount": {
                        "type": "String",
                        "defaultValue": "0"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_ASQL')]",
                "[concat(variables('factoryId'), '/datasets/DS_ASQL_CDAG_STG')]",
                "[concat(variables('factoryId'), '/datasets/DS_ASQL_CDAG_SCD_BASE')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_DATA_MoveIt_To_ABLB')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Move data files from Move It File share to Azure Blob storage",
                "activities": [
                    {
                        "name": "GM_Get_List_Of_Files",
                        "description": "Get the list of files from Temporary storage",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "IF_Check_Load",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "DS_ABLB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Azure_Blob_FilePath": {
                                        "value": "@pipeline().parameters.AzureBlob_Temporary_Storage",
                                        "type": "Expression"
                                    },
                                    "Azure_Blob_Secret": {
                                        "value": "@pipeline().parameters.AzureBlob_ConnectionString",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems",
                                "itemName"
                            ]
                        }
                    },
                    {
                        "name": "FE_ForEach_File_Get_User_Info",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "WB_FetchToken",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GM_Get_List_Of_Files').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "EPL_Get_File_User_Info",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_Get_File_User_Info",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "Database_Name": {
                                                "value": "@pipeline().parameters.Database_Name",
                                                "type": "Expression"
                                            },
                                            "Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Database_Domain_Name",
                                                "type": "Expression"
                                            },
                                            "FIlename": {
                                                "value": "@item().name",
                                                "type": "Expression"
                                            },
                                            "Token": {
                                                "value": "@activity('WB_FetchToken').output.access_token",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "EPL_Get_File_User_Info_Retry_1",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "WB_FetchToken2",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_Get_File_User_Info",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "Database_Name": {
                                                "value": "@pipeline().parameters.Database_Name",
                                                "type": "Expression"
                                            },
                                            "Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Database_Domain_Name",
                                                "type": "Expression"
                                            },
                                            "FIlename": {
                                                "value": "@item().name",
                                                "type": "Expression"
                                            },
                                            "Token": {
                                                "value": "@activity('WB_FetchToken2').output.access_token",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "EPL_Get_File_User_Info_Retry_2",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "WB_FetchToken1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_Get_File_User_Info",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "Database_Name": {
                                                "value": "@pipeline().parameters.Database_Name",
                                                "type": "Expression"
                                            },
                                            "Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Database_Domain_Name",
                                                "type": "Expression"
                                            },
                                            "FIlename": {
                                                "value": "@item().name",
                                                "type": "Expression"
                                            },
                                            "Token": {
                                                "value": "@activity('WB_FetchToken1').output.access_token",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "EPL_Get_File_User_Info_Retry_3",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "WB_FetchToken3",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_Get_File_User_Info",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "Database_Name": {
                                                "value": "@pipeline().parameters.Database_Name",
                                                "type": "Expression"
                                            },
                                            "Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Database_Domain_Name",
                                                "type": "Expression"
                                            },
                                            "FIlename": {
                                                "value": "@item().name",
                                                "type": "Expression"
                                            },
                                            "Token": {
                                                "value": "@activity('WB_FetchToken3').output.access_token",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "WB_FetchToken1",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "EPL_Get_File_User_Info",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 3,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": "https://sftp-am.sbp.eyclienthub.com/api/V1/token",
                                        "method": "POST",
                                        "headers": {
                                            "accept": "application/json",
                                            "Content-Type": "application/x-www-form-urlencoded"
                                        },
                                        "body": {
                                            "value": "@concat('grant_type=password&username=',pipeline().parameters.MoveIt_API_Username,'&password=',pipeline().parameters.MoveIt_API_Password)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "WB_FetchToken2",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "EPL_Get_File_User_Info_Retry_2",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 3,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": "https://sftp-am.sbp.eyclienthub.com/api/V1/token",
                                        "method": "POST",
                                        "headers": {
                                            "accept": "application/json",
                                            "Content-Type": "application/x-www-form-urlencoded"
                                        },
                                        "body": {
                                            "value": "@concat('grant_type=password&username=',pipeline().parameters.MoveIt_API_Username,'&password=',pipeline().parameters.MoveIt_API_Password)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "WB_FetchToken3",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "EPL_Get_File_User_Info_Retry_1",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 3,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": "https://sftp-am.sbp.eyclienthub.com/api/V1/token",
                                        "method": "POST",
                                        "headers": {
                                            "accept": "application/json",
                                            "Content-Type": "application/x-www-form-urlencoded"
                                        },
                                        "body": {
                                            "value": "@concat('grant_type=password&username=',pipeline().parameters.MoveIt_API_Username,'&password=',pipeline().parameters.MoveIt_API_Password)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "DLT_Clean_Temporary_Storage_2",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "FE_Validate_File",
                                "dependencyConditions": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "DS_ABLB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Azure_Blob_FilePath": {
                                        "value": "@pipeline().parameters.AzureBlob_Temporary_Storage",
                                        "type": "Expression"
                                    },
                                    "Azure_Blob_Secret": {
                                        "value": "@pipeline().parameters.AzureBlob_ConnectionString",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "enableLogging": false
                        }
                    },
                    {
                        "name": "CD_ABLB_Temp_To_Source",
                        "description": "Move files from Temporary storage in Blob to Source location in Blob",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "IF_Check_Load",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "BlobSource",
                                "recursive": true
                            },
                            "sink": {
                                "type": "BlobSink"
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ABLB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Azure_Blob_FilePath": {
                                        "value": "@pipeline().parameters.AzureBlob_Temporary_Storage",
                                        "type": "Expression"
                                    },
                                    "Azure_Blob_Secret": {
                                        "value": "@pipeline().parameters.AzureBlob_ConnectionString",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ABLB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Azure_Blob_FilePath": {
                                        "value": "@pipeline().parameters.AzureBlob_DestinationPath",
                                        "type": "Expression"
                                    },
                                    "Azure_Blob_Secret": {
                                        "value": "@pipeline().parameters.AzureBlob_ConnectionString",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "FE_ForEach_File_Delete_From_MoveIT",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "FE_ForEach_File_Get_User_Info",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GM_Get_List_Of_Files').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "SV_Set_Filename0",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "FilePath",
                                        "value": {
                                            "value": "@item().name",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "DLT_Delete_File",
                                    "description": "Delete the file from Move IT",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "SV_Set_Filename0",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "DS_SFTP_MoveIt",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "MoveIt_Username_Secret": {
                                                    "value": "@pipeline().parameters.MoveIt_Username",
                                                    "type": "Expression"
                                                },
                                                "MoveIt_Password_Secret": {
                                                    "value": "@pipeline().parameters.MoveIt_Password",
                                                    "type": "Expression"
                                                },
                                                "MoveIt_Source_FilePath": {
                                                    "value": "@pipeline().parameters.MoveIt_SourcePath",
                                                    "type": "Expression"
                                                },
                                                "MoveIt_Filename": {
                                                    "value": "@variables('FilePath')",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "maxConcurrentConnections": 1
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "FE_Validate_File",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "FE_ForEach_File_Get_User_Info",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GM_Get_List_Of_Files').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "EPL_Validate_File",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_Validate_File",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "Filename": {
                                                "value": "@item().name",
                                                "type": "Expression"
                                            },
                                            "Azure_Blob_Source_Path": {
                                                "value": "@pipeline().parameters.AzureBlob_Temporary_Storage",
                                                "type": "Expression"
                                            },
                                            "Azure_Blob_Conn_String": {
                                                "value": "@pipeline().parameters.AzureBlob_ConnectionString",
                                                "type": "Expression"
                                            },
                                            "Database_Name": {
                                                "value": "@pipeline().parameters.Database_Name",
                                                "type": "Expression"
                                            },
                                            "Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Database_Domain_Name",
                                                "type": "Expression"
                                            },
                                            "Temp_Database_Name": {
                                                "value": "@pipeline().parameters.Temp_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Temp_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Temp_Database_Domain_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "WB_FetchToken",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "GM_Get_List_Of_Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://sftp-am.sbp.eyclienthub.com/api/V1/token",
                            "method": "POST",
                            "headers": {
                                "accept": "application/json",
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "body": {
                                "value": "@concat('grant_type=password&username=',pipeline().parameters.MoveIt_API_Username,'&password=',pipeline().parameters.MoveIt_API_Password)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "IF_Check_Load",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "GM_Get_List_Of_MoveIT_Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@lessOrEquals(length(activity('GM_Get_List_Of_MoveIT_Files').output.childItems), 50)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Execute Pipeline1",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_MoveIt_To_Blob",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "MoveIt_Username_Secret": {
                                                "value": "@pipeline().parameters.MoveIt_Username",
                                                "type": "Expression"
                                            },
                                            "MoveIt_Password_Secret": {
                                                "value": "@pipeline().parameters.MoveIt_Password",
                                                "type": "Expression"
                                            },
                                            "MoveIt_Source_FilePath": {
                                                "value": "@pipeline().parameters.MoveIt_SourcePath",
                                                "type": "Expression"
                                            },
                                            "Azure_Blob_Destination_FilePath": {
                                                "value": "@pipeline().parameters.AzureBlob_Temporary_Storage",
                                                "type": "Expression"
                                            },
                                            "Azure_Blob_Connection_String_Secret": {
                                                "value": "@pipeline().parameters.AzureBlob_ConnectionString",
                                                "type": "Expression"
                                            },
                                            "ChildItems": {
                                                "value": "@activity('GM_Get_List_Of_MoveIT_Files').output.childItems",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "CD_Copy_MoveIT_To_Blob",
                                    "description": "Move files from Move It SFTP server to Azure Blob storage",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "FileSystemSource",
                                            "recursive": false,
                                            "maxConcurrentConnections": 16
                                        },
                                        "sink": {
                                            "type": "BlobSink",
                                            "maxConcurrentConnections": 16
                                        },
                                        "enableStaging": false,
                                        "parallelCopies": 32,
                                        "enableSkipIncompatibleRow": true,
                                        "dataIntegrationUnits": 32
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "DS_MoveIt_ListingFiles",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "MoveIt_Username_Secret": {
                                                    "value": "@pipeline().parameters.MoveIt_Username",
                                                    "type": "Expression"
                                                },
                                                "MoveIt_Password_Secret": {
                                                    "value": "@pipeline().parameters.MoveIt_Password",
                                                    "type": "Expression"
                                                },
                                                "MoveIt_Source_Path": {
                                                    "value": "@pipeline().parameters.MoveIt_SourcePath",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "DS_ABLB",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Azure_Blob_FilePath": {
                                                    "value": "@pipeline().parameters.AzureBlob_Temporary_Storage",
                                                    "type": "Expression"
                                                },
                                                "Azure_Blob_Secret": {
                                                    "value": "@pipeline().parameters.AzureBlob_ConnectionString",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "GM_Get_List_Of_MoveIT_Files",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "DS_MoveIt_ListingFiles",
                                "type": "DatasetReference",
                                "parameters": {
                                    "MoveIt_Username_Secret": {
                                        "value": "@pipeline().parameters.MoveIt_Username",
                                        "type": "Expression"
                                    },
                                    "MoveIt_Password_Secret": {
                                        "value": "@pipeline().parameters.MoveIt_Password",
                                        "type": "Expression"
                                    },
                                    "MoveIt_Source_Path": {
                                        "value": "@pipeline().parameters.MoveIt_SourcePath",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ]
                        }
                    }
                ],
                "parameters": {
                    "MoveIt_Username": {
                        "type": "string",
                        "defaultValue": "mitsa"
                    },
                    "MoveIt_Password": {
                        "type": "string",
                        "defaultValue": "mitsap"
                    },
                    "MoveIt_SourcePath": {
                        "type": "string",
                        "defaultValue": "Engagements/CTP-Offering/COPA/USCQINT07PRSG01/QA-COPABulkUtil-03"
                    },
                    "AzureBlob_ConnectionString": {
                        "type": "string",
                        "defaultValue": "msistore"
                    },
                    "AzureBlob_DestinationPath": {
                        "type": "string",
                        "defaultValue": "client3"
                    },
                    "AzureBlob_Temporary_Storage": {
                        "type": "string",
                        "defaultValue": "client3-temp"
                    },
                    "Database_Name": {
                        "type": "string",
                        "defaultValue": "USCQINT07PSDB02"
                    },
                    "Database_Domain_Name": {
                        "type": "string",
                        "defaultValue": "uscpint000sql01.database.windows.net"
                    },
                    "Temp_Database_Name": {
                        "type": "string",
                        "defaultValue": "USCQINT07PSDB02"
                    },
                    "Temp_Database_Domain_Name": {
                        "type": "string",
                        "defaultValue": "uscpint000sql01.database.windows.net"
                    },
                    "MoveIt_API_Username": {
                        "type": "string",
                        "defaultValue": "Q.COPAADF.01"
                    },
                    "MoveIt_API_Password": {
                        "type": "string",
                        "defaultValue": "#`jW`nG%5Yd':huv"
                    },
                    "Base_Database_Name": {
                        "type": "string",
                        "defaultValue": "USCQINT07PSDB01"
                    },
                    "Base_Database_Domain_Name": {
                        "type": "string",
                        "defaultValue": "uscpint000sql01.database.windows.net"
                    }
                },
                "variables": {
                    "FilePath": {
                        "type": "String"
                    },
                    "SRC_ID_1": {
                        "type": "String"
                    },
                    "SRC_ID_2": {
                        "type": "String"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_ABLB')]",
                "[concat(variables('factoryId'), '/datasets/DS_MoveIt_ListingFiles')]",
                "[concat(variables('factoryId'), '/pipelines/PL_Get_File_User_Info')]",
                "[concat(variables('factoryId'), '/datasets/DS_SFTP_MoveIt')]",
                "[concat(variables('factoryId'), '/pipelines/PL_Validate_File')]",
                "[concat(variables('factoryId'), '/pipelines/PL_MoveIt_To_Blob')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_MoveIt_To_Blob')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Move Files To Blob",
                "activities": [
                    {
                        "name": "FE_Copy_Sequentially",
                        "type": "ForEach",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().parameters.ChildItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Copy1",
                                    "description": "Move files from Move It SFTP server to Azure Blob storage",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "FileSystemSource",
                                            "recursive": false,
                                            "maxConcurrentConnections": 0
                                        },
                                        "sink": {
                                            "type": "BlobSink"
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "DS_SFTP_MoveIt",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "MoveIt_Username_Secret": {
                                                    "value": "@pipeline().parameters.MoveIt_Username_Secret",
                                                    "type": "Expression"
                                                },
                                                "MoveIt_Password_Secret": {
                                                    "value": "@pipeline().parameters.MoveIt_Password_Secret",
                                                    "type": "Expression"
                                                },
                                                "MoveIt_Source_FilePath": {
                                                    "value": "@pipeline().parameters.MoveIt_Source_FilePath",
                                                    "type": "Expression"
                                                },
                                                "MoveIt_Filename": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "DS_ABLB",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Azure_Blob_FilePath": {
                                                    "value": "@pipeline().parameters.Azure_Blob_Destination_FilePath",
                                                    "type": "Expression"
                                                },
                                                "Azure_Blob_Secret": {
                                                    "value": "@pipeline().parameters.Azure_Blob_Connection_String_Secret",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "MoveIt_Username_Secret": {
                        "type": "string"
                    },
                    "MoveIt_Password_Secret": {
                        "type": "string"
                    },
                    "MoveIt_Source_FilePath": {
                        "type": "string"
                    },
                    "Azure_Blob_Destination_FilePath": {
                        "type": "string"
                    },
                    "Azure_Blob_Connection_String_Secret": {
                        "type": "string"
                    },
                    "ChildItems": {
                        "type": "array"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_SFTP_MoveIt')]",
                "[concat(variables('factoryId'), '/datasets/DS_ABLB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_Get_File_User_Info')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "WB_Get_List_Of_Files",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 5,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://sftp-am.sbp.eyclienthub.com/api/v1/files?perPage=5000",
                            "method": "GET",
                            "headers": {
                                "Authorization": {
                                    "value": "@concat('Bearer ',pipeline().parameters.Token)",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "FLT_Get_FileId",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "WB_Get_List_Of_Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('WB_Get_List_Of_Files').output.items",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().name,pipeline().parameters.Filename)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "WB_Get_File_Info",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "FLT_Get_FileId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 5,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@concat('https://sftp-am.sbp.eyclienthub.com/api/v1/files/',activity('FLT_Get_FileId').output.value[0].id)",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {
                                "Authorization": {
                                    "value": "@concat('Bearer ',pipeline().parameters.Token)",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "WB_Get_User_Info",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "WB_Get_File_Info",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 5,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@concat('https://sftp-am.sbp.eyclienthub.com/api/v1/users/',activity('WB_Get_File_Info').output.uploadUsername)",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {
                                "Authorization": {
                                    "value": "@concat('Bearer ',pipeline().parameters.Token)",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "SP_Insert_FIle_User_Data_Base",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "WB_Get_User_Info",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_Add_LoadFileLog]",
                            "storedProcedureParameters": {
                                "client_Ref_Id": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "client_Source_Ref_Id": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "protocol_Ref_Id": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "src_Created_Date": {
                                    "value": {
                                        "value": "@utcnow()",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "src_CreatedBy_User": {
                                    "value": "Data-Factory",
                                    "type": "String"
                                },
                                "src_Data_From_Begin_Date": {
                                    "value": null,
                                    "type": "DateTime"
                                },
                                "src_Data_From_End_Date": {
                                    "value": null,
                                    "type": "DateTime"
                                },
                                "src_File_Active_Flag": {
                                    "value": "Y",
                                    "type": "String"
                                },
                                "src_File_Begin_Effective_Date": {
                                    "value": null,
                                    "type": "DateTime"
                                },
                                "src_File_End_Effective_Date": {
                                    "value": null,
                                    "type": "DateTime"
                                },
                                "src_File_From_UserName": {
                                    "value": {
                                        "value": "@activity('WB_Get_User_Info').output.realname",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "src_File_Name": {
                                    "value": {
                                        "value": "@pipeline().parameters.FIlename",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "src_File_Processed_Date": {
                                    "value": {
                                        "value": "@utcnow()",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "src_File_Processed_Exception_Flag": {
                                    "value": "N",
                                    "type": "String"
                                },
                                "src_File_Processed_Flag": {
                                    "value": "N",
                                    "type": "String"
                                },
                                "src_File_Receipt_Date": {
                                    "value": {
                                        "value": "@activity('WB_Get_File_Info').output.uploadStamp",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "src_Total_Records_Processed": {
                                    "value": "0",
                                    "type": "Decimal"
                                },
                                "src_Total_Records_ReceivedToLoad": {
                                    "value": "0",
                                    "type": "Decimal"
                                },
                                "user_Email": {
                                    "value": {
                                        "value": "@activity('WB_Get_User_Info').output.email",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "src_Dataflow_Current_Status": {
                                    "value": "NFL",
                                    "type": "String"
                                },
                                "src_Dataflow_Remarks": {
                                    "value": "New file received at  COPA system",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "Database_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Name",
                                    "type": "Expression"
                                },
                                "Database_Domain_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "parameters": {
                    "Database_Name": {
                        "type": "string"
                    },
                    "Database_Domain_Name": {
                        "type": "string"
                    },
                    "FIlename": {
                        "type": "string"
                    },
                    "Token": {
                        "type": "string"
                    },
                    "Base_Database_Name": {
                        "type": "string"
                    },
                    "Base_Database_Domain_Name": {
                        "type": "string"
                    }
                },
                "variables": {
                    "Username": {
                        "type": "String",
                        "defaultValue": "Q.COPAADF.01"
                    },
                    "Password": {
                        "type": "String",
                        "defaultValue": "!=Iu(ky{8:[M@Ig"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_Validate_CSV')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "IF_File_Contains_Data",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "IF_NOT_Null_Header",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(equals('0', variables('IsFileEmpty')),contains(activity('LKP_Get_First_Row').output,'firstRow'))",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "SP_Log_Exception",
                                    "description": "Log Exception - Unsupported File type",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP_Update_File_Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Add_Load_File_Exception_Base]",
                                        "storedProcedureParameters": {
                                            "client_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "client_Source_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "excptn_Ref_Id": {
                                                "value": "4",
                                                "type": "Int32"
                                            },
                                            "loadFileException_Created_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "loadFileException_CreatedBy_UserName": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "loadFileException_Last_Updated_Date": {
                                                "value": null,
                                                "type": "DateTime"
                                            },
                                            "loadFileException_Last_Updated_UserName": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "loadFileException_System_Code": {
                                                "value": "FV0004",
                                                "type": "String"
                                            },
                                            "loadFileException_System_Description": {
                                                "value": "File does not contain any data or Header row is not in expected format - Program Name, Universe, Year, Protocol Effective Begin Date, Protocol Effective End Date.",
                                                "type": "String"
                                            },
                                            "protocal_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "src_File_Id": {
                                                "value": {
                                                    "value": "@activity('LKP_Load_File_Source_Id').output.firstRow.SRC_FILE_ID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SP_Update_File_Log",
                                    "description": "Update the Exception in FILE_LOG_BASE table",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Update_LoadFileLog]",
                                        "storedProcedureParameters": {
                                            "src_File_Name": {
                                                "value": {
                                                    "value": "@pipeline().parameters.Filename",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "src_File_Processed_Exception_Flag": {
                                                "value": "Y",
                                                "type": "String"
                                            },
                                            "src_Last_Updated_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "src_Last_UpdatedBy_User": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "src_Dataflow_Current_status": {
                                                "value": "ERROR",
                                                "type": "String"
                                            },
                                            "src_Dataflow_Remarks": {
                                                "value": {
                                                    "value": "File does not contain any data or Header row is not in expected format - Program Name, Universe, Year, Protocol Effective Begin Date, Protocol Effective End Date.",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "SV_File_Not_Emplty",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "IsFileEmpty",
                                        "value": "0"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "IF_File_Has_First_Row",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "IF_File_Contains_Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(and(and(and(and(equals(variables('IsFileEmpty'),'0'),contains(activity('LKP_Get_First_Row').output.firstRow,'Program Name')),contains(activity('LKP_Get_First_Row').output.firstRow,'Universe')),contains(activity('LKP_Get_First_Row').output.firstRow,'Year')),contains(activity('LKP_Get_First_Row').output.firstRow,'Protocol Effective Begin Date')),contains(activity('LKP_Get_First_Row').output.firstRow,'Protocol Effective End Date'))",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "SV_IsFileEmpty",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "IsFileEmpty",
                                        "value": "0"
                                    }
                                },
                                {
                                    "name": "SV_Set_Date",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SV_IsFileEmpty",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "Start_Date",
                                        "value": {
                                            "value": "@substring(activity('LKP_Get_First_Row').output.firstRow['Protocol Effective Begin Date'],0,2)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SV_Set_Month",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SV_Set_Date",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "Start_Month",
                                        "value": {
                                            "value": "@substring(activity('LKP_Get_First_Row').output.firstRow['Protocol Effective Begin Date'],3,2)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SV_Set_End_Date",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SV_Set_Month",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "End_Date",
                                        "value": {
                                            "value": "@substring(activity('LKP_Get_First_Row').output.firstRow['Protocol Effective End Date'],0,2)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SV_Set_End_Month",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SV_Set_End_Date",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "End_Month",
                                        "value": {
                                            "value": "@substring(activity('LKP_Get_First_Row').output.firstRow['Protocol Effective End Date'],3,2)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "LKP_Get_Protocol",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SV_Set_End_Month",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderStoredProcedureName": "[[dbo].[usp_Get_Protocol_References]",
                                            "storedProcedureParameters": {
                                                "pr_Code": {
                                                    "type": "String",
                                                    "value": {
                                                        "value": "@activity('LKP_Get_First_Row').output.firstRow['Universe']",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "pr_Eff_Begin_Date": {
                                                    "type": "DateTime",
                                                    "value": {
                                                        "value": "@concat(variables('Start_Month'),'-',variables('Start_Date'),substring(activity('LKP_Get_First_Row').output.firstRow['Protocol Effective Begin Date'],5,5))",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "pr_Eff_End_Date": {
                                                    "type": "DateTime",
                                                    "value": {
                                                        "value": "@concat(variables('End_Month'),'-',variables('End_Date'),substring(activity('LKP_Get_First_Row').output.firstRow['Protocol Effective End Date'],5,5))",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "pr_Type": {
                                                    "type": "String",
                                                    "value": {
                                                        "value": "@activity('LKP_Get_First_Row').output.firstRow['Program Name']",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "pr_Year": {
                                                    "type": "Decimal",
                                                    "value": {
                                                        "value": "@activity('LKP_Get_First_Row').output.firstRow['Year']",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "protocol_Ref_Id": {
                                                    "type": "Int32",
                                                    "value": "0"
                                                }
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "DS_ASQL_BASE",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Base_Database_Name": {
                                                    "value": "@pipeline().parameters.Base_Database_Name",
                                                    "type": "Expression"
                                                },
                                                "Base_Database_Domain_Name": {
                                                    "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                    "type": "Expression"
                                                },
                                                "Table_Name": "test"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SV_Has_First_Row",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "LKP_Get_Protocol",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "IsFirstRow",
                                        "value": "1"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "IF_Protocol_Exists",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "IF_File_Has_First_Row",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(and(and(and(and(and(equals(variables('IsFileEmpty'),'0'),contains(activity('LKP_Get_First_Row').output.firstRow,'Program Name')),contains(activity('LKP_Get_First_Row').output.firstRow,'Universe')),contains(activity('LKP_Get_First_Row').output.firstRow,'Year')),contains(activity('LKP_Get_First_Row').output.firstRow,'Protocol Effective Begin Date')),contains(activity('LKP_Get_First_Row').output.firstRow,'Protocol Effective End Date')),contains(activity('LKP_Get_Protocol').output,'firstRow'))",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "SV_Protocol_Doesnt_Exists",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "Protocol_Exists",
                                        "value": "0"
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "LKP_Get_File_Types_For_Protocol",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SV_Protocol_Exists",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('SELECT  FTR_TYPE FROM FILE_TYPE_REF_BASE WHERE FTR_ACTIVE_FLAG = ''Y'' AND FTR_TYPE = ''.csv'' AND PROTOCOL_REF_ID =  ' , activity('LKP_Get_Protocol').output.firstRow.PROTOCOL_REF_ID)",
                                                "type": "Expression"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "DS_ASQL_BASE",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Base_Database_Name": {
                                                    "value": "@pipeline().parameters.Base_Database_Name",
                                                    "type": "Expression"
                                                },
                                                "Base_Database_Domain_Name": {
                                                    "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                    "type": "Expression"
                                                },
                                                "Table_Name": "LKP_Get_File_Type"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "SV_Protocol_Exists",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "Protocol_Exists",
                                        "value": "1"
                                    }
                                },
                                {
                                    "name": "SqlServerStoredProcedure7",
                                    "description": "Log Exception - Unsupported File type",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "LKP_Get_File_Types_For_Protocol",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Add_Load_File_Exception_Base]",
                                        "storedProcedureParameters": {
                                            "client_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "client_Source_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "excptn_Ref_Id": {
                                                "value": "1",
                                                "type": "Int32"
                                            },
                                            "loadFileException_Created_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "loadFileException_CreatedBy_UserName": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "loadFileException_Last_Updated_Date": {
                                                "value": null,
                                                "type": "DateTime"
                                            },
                                            "loadFileException_Last_Updated_UserName": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "loadFileException_System_Code": {
                                                "value": "FV0001",
                                                "type": "String"
                                            },
                                            "loadFileException_System_Description": {
                                                "value": {
                                                    "value": "@concat('Exception occured while executing Pipeline ',pipeline().Pipeline, ' Run Id: ' ,pipeline().RunId, ' Trigger Time: ',pipeline().TriggerTime, 'Error Message: ' , activity('LKP_Get_File_Types_For_Protocol').error.message)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "protocal_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "src_File_Id": {
                                                "value": {
                                                    "value": "@activity('LKP_Load_File_Source_Id').output.firstRow.SRC_FILE_ID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SqlServerStoredProcedure8",
                                    "description": "Update the Exception in FILE_LOG_BASE table",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SqlServerStoredProcedure7",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Update_LoadFileLog_By_FileName]",
                                        "storedProcedureParameters": {
                                            "src_File_Name": {
                                                "value": {
                                                    "value": "@pipeline().parameters.Filename",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "src_File_Processed_Exception_Flag": {
                                                "value": "Y",
                                                "type": "String"
                                            },
                                            "src_Last_Updated_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "src_Last_UpdatedBy_User": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "src_Dataflow_Current_status": {
                                                "value": "ERROR",
                                                "type": "String"
                                            },
                                            "src_Dataflow_Remarks": {
                                                "value": {
                                                    "value": "@concat('Exception occured while executing Pipeline ',pipeline().Pipeline, ' Run Id: ' ,pipeline().RunId, ' Trigger Time: ',pipeline().TriggerTime)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SP_Update_Protocol_In_File_Log",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SV_Protocol_Exists",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Create_Dynamic_Table]",
                                        "storedProcedureParameters": {
                                            "DSQuery": {
                                                "value": {
                                                    "value": "@concat('  UPDATE [dbo].[LOAD_FILE_LOG_BASE]\n  SET [PROTOCOL_REF_ID] = ', activity('LKP_Get_Protocol').output.firstRow.PROTOCOL_REF_ID,\n  'WHERE [SRC_FILE_NM] = ''', pipeline().parameters.Filename, '''')",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "IF_File_Type_Supported_By_Protocol",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "IF_Protocol_Exists",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(equals('1',variables('Protocol_Exists')),greater(activity('LKP_Get_File_Types_For_Protocol').output.count,0))",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "EPL_Validate_CSV_Header",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_Validate_CSV_Header",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "Filename": {
                                                "value": "@pipeline().parameters.Filename",
                                                "type": "Expression"
                                            },
                                            "Azure_Blob_Source_Path": {
                                                "value": "@pipeline().parameters.Azure_Blob_Source_Path",
                                                "type": "Expression"
                                            },
                                            "Azure_Blob_Conn_String": {
                                                "value": "@pipeline().parameters.Azure_Blob_Conn_String",
                                                "type": "Expression"
                                            },
                                            "Database_Name": {
                                                "value": "@pipeline().parameters.Database_Name",
                                                "type": "Expression"
                                            },
                                            "Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Database_Domain_Name",
                                                "type": "Expression"
                                            },
                                            "Protocol_Ref_Id": {
                                                "value": "@activity('LKP_Get_Protocol').output.firstRow.PROTOCOL_REF_ID",
                                                "type": "Expression"
                                            },
                                            "File_Source_Id": {
                                                "value": "@activity('LKP_Load_File_Source_Id').output.firstRow.SRC_FILE_ID",
                                                "type": "Expression"
                                            },
                                            "Temp_Database_Name": {
                                                "value": "@pipeline().parameters.Temp_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Temp_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Temp_Database_Domain_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "IF_File_Type_Not_Supported",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "IF_File_Type_Supported_By_Protocol",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(equals('1',variables('Protocol_Exists')),not(greater(activity('LKP_Get_File_Types_For_Protocol').output.count,0)))",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "SP_Log_Exception6",
                                    "description": "Log Exception - Unsupported File type",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP_Update_Exception_Flag6",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Add_Load_File_Exception_Base]",
                                        "storedProcedureParameters": {
                                            "client_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "client_Source_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "excptn_Ref_Id": {
                                                "value": "2",
                                                "type": "Int32"
                                            },
                                            "loadFileException_Created_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "loadFileException_CreatedBy_UserName": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "loadFileException_Last_Updated_Date": {
                                                "value": null,
                                                "type": "DateTime"
                                            },
                                            "loadFileException_Last_Updated_UserName": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "loadFileException_System_Code": {
                                                "value": "FV0002",
                                                "type": "String"
                                            },
                                            "loadFileException_System_Description": {
                                                "value": {
                                                    "value": "@concat('File type is not supported by the Protocol ',activity('LKP_Get_Protocol').output.firstRow.PR_NM)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "protocal_Ref_Id": {
                                                "value": {
                                                    "value": "@activity('LKP_Get_Protocol').output.firstRow.PROTOCOL_REF_ID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "src_File_Id": {
                                                "value": {
                                                    "value": "@activity('LKP_Load_File_Source_Id').output.firstRow.SRC_FILE_ID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SP_Update_Exception_Flag6",
                                    "description": "Update the Exception in FILE_LOG_BASE table",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Update_LoadFileLog_By_FileName]",
                                        "storedProcedureParameters": {
                                            "src_File_Name": {
                                                "value": {
                                                    "value": "@pipeline().parameters.Filename",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "src_File_Processed_Exception_Flag": {
                                                "value": "Y",
                                                "type": "String"
                                            },
                                            "src_Last_Updated_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "src_Last_UpdatedBy_User": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "src_Dataflow_Current_status": {
                                                "value": "ERROR",
                                                "type": "String"
                                            },
                                            "src_Dataflow_Remarks": {
                                                "value": {
                                                    "value": "@concat('File type is not supported by the Protocol ',activity('LKP_Get_Protocol').output.firstRow.PR_NM)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "IF_No_Rows_In_File",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "IF_File_Has_First_Row",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(equals('0',variables('IsFileEmpty')),equals('0',variables('IsFirstRow')))",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "SqlServerStoredProcedure1",
                                    "description": "Log Exception - Unsupported File type",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Add_Load_File_Exception_Base]",
                                        "storedProcedureParameters": {
                                            "client_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "client_Source_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "excptn_Ref_Id": {
                                                "value": "4",
                                                "type": "Int32"
                                            },
                                            "loadFileException_Created_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "loadFileException_CreatedBy_UserName": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "loadFileException_Last_Updated_Date": {
                                                "value": null,
                                                "type": "DateTime"
                                            },
                                            "loadFileException_Last_Updated_UserName": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "loadFileException_System_Code": {
                                                "value": "FV0004",
                                                "type": "String"
                                            },
                                            "loadFileException_System_Description": {
                                                "value": "File does not contain any data or Header row is not in expected format - Program Name, Universe, Year, Protocol Effective Begin Date, Protocol Effective End Date.",
                                                "type": "String"
                                            },
                                            "protocal_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "src_File_Id": {
                                                "value": {
                                                    "value": "@activity('LKP_Load_File_Source_Id').output.firstRow.SRC_FILE_ID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SqlServerStoredProcedure2",
                                    "description": "Update the Exception in FILE_LOG_BASE table",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SqlServerStoredProcedure1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Update_LoadFileLog_By_FileName]",
                                        "storedProcedureParameters": {
                                            "src_File_Name": {
                                                "value": {
                                                    "value": "@pipeline().parameters.Filename",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "src_File_Processed_Exception_Flag": {
                                                "value": "Y",
                                                "type": "String"
                                            },
                                            "src_Last_Updated_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "src_Last_UpdatedBy_User": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "src_Dataflow_Current_status": {
                                                "value": "ERROR"
                                            },
                                            "src_Dataflow_Remarks": {
                                                "value": "File does not contain any data or Header row is not in expected format - Program Name, Universe, Year, Protocol Effective Begin Date, Protocol Effective End Date."
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "IF_Protocol_Doesnt_Exist",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "IF_Protocol_Exists",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(and(equals('0',variables('IsFileEmpty')),equals('1',variables('IsFirstRow'))),equals('0',variables('Protocol_Exists')))",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "SqlServerStoredProcedure3",
                                    "description": "Log Exception - Unsupported File type",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SqlServerStoredProcedure4",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Add_Load_File_Exception_Base]",
                                        "storedProcedureParameters": {
                                            "client_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "client_Source_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "excptn_Ref_Id": {
                                                "value": "5",
                                                "type": "Int32"
                                            },
                                            "loadFileException_Created_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "loadFileException_CreatedBy_UserName": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "loadFileException_Last_Updated_Date": {
                                                "value": null,
                                                "type": "DateTime"
                                            },
                                            "loadFileException_Last_Updated_UserName": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "loadFileException_System_Code": {
                                                "value": "FV0005",
                                                "type": "String"
                                            },
                                            "loadFileException_System_Description": {
                                                "value": "Protocol not found for provided combination of Program Name, Universe, Year, Protocol Effective Begin Date, Protocol Effective End Date.",
                                                "type": "String"
                                            },
                                            "protocal_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "src_File_Id": {
                                                "value": {
                                                    "value": "@activity('LKP_Load_File_Source_Id').output.firstRow.SRC_FILE_ID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SqlServerStoredProcedure4",
                                    "description": "Update the Exception in FILE_LOG_BASE table",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Update_LoadFileLog_By_FileName]",
                                        "storedProcedureParameters": {
                                            "src_File_Name": {
                                                "value": {
                                                    "value": "@pipeline().parameters.Filename",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "src_File_Processed_Exception_Flag": {
                                                "value": "Y",
                                                "type": "String"
                                            },
                                            "src_Last_Updated_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "src_Last_UpdatedBy_User": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "src_Dataflow_Current_status": {
                                                "value": "ERROR",
                                                "type": "String"
                                            },
                                            "src_Dataflow_Remarks": {
                                                "value": "Protocol not found for provided combination of Program Name, Universe, Year, Protocol Effective Begin Date, Protocol Effective End Date.",
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "LKP_Read_CSV",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "LKP_Load_File_Source_Id",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "BlobSource",
                                "recursive": false
                            },
                            "dataset": {
                                "referenceName": "DS_ABLB_CSV_Header",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Azure_Blob_Secret": {
                                        "value": "@pipeline().parameters.Azure_Blob_Conn_String",
                                        "type": "Expression"
                                    },
                                    "Filename": {
                                        "value": "@pipeline().parameters.Filename",
                                        "type": "Expression"
                                    },
                                    "Azure_File_Path": {
                                        "value": "@pipeline().parameters.Azure_Blob_Source_Path",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "IF_NOT_Null_Header",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "LKP_Read_CSV",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(and(and(and(and(and(and(and(and(and(contains(activity('LKP_Read_CSV').output,'firstRow'), contains(activity('LKP_Read_CSV').output.firstRow, 'Prop_0')),\ncontains(activity('LKP_Read_CSV').output.firstRow, 'Prop_1')),\ncontains(activity('LKP_Read_CSV').output.firstRow, 'Prop_2')),\ncontains(activity('LKP_Read_CSV').output.firstRow, 'Prop_3')),\ncontains(activity('LKP_Read_CSV').output.firstRow, 'Prop_4')),\nnot(equals(activity('LKP_Read_CSV').output.firstRow.Prop_0,null))),\nnot(equals(activity('LKP_Read_CSV').output.firstRow.Prop_1,null))),\nnot(equals(activity('LKP_Read_CSV').output.firstRow.Prop_2,null))),\nnot(equals(activity('LKP_Read_CSV').output.firstRow.Prop_3,null))),\nnot(equals(activity('LKP_Read_CSV').output.firstRow.Prop_4,null)))",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "SV_Is_FileEmpty",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "IsFileEmpty",
                                        "value": "1"
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "LKP_Get_First_Row",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "BlobSource",
                                            "recursive": false
                                        },
                                        "dataset": {
                                            "referenceName": "DS_ABLB_CSV_Protocol",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ConnectionString": {
                                                    "value": "@pipeline().parameters.Azure_Blob_Conn_String",
                                                    "type": "Expression"
                                                },
                                                "SourcePath": {
                                                    "value": "@pipeline().parameters.Azure_Blob_Source_Path",
                                                    "type": "Expression"
                                                },
                                                "Filename": {
                                                    "value": "@pipeline().parameters.Filename",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": true
                                    }
                                },
                                {
                                    "name": "SV_FileEmpty",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "LKP_Get_First_Row",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "IsFileEmpty",
                                        "value": "0"
                                    }
                                },
                                {
                                    "name": "SP_Log_Exception_Get_First_Row_CSV",
                                    "description": "Log Exception - Unsupported File type",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "LKP_Get_First_Row",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Add_Load_File_Exception_Base]",
                                        "storedProcedureParameters": {
                                            "client_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "client_Source_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "excptn_Ref_Id": {
                                                "value": "6",
                                                "type": "Int32"
                                            },
                                            "loadFileException_Created_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "loadFileException_CreatedBy_UserName": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "loadFileException_Last_Updated_Date": {
                                                "value": null,
                                                "type": "DateTime"
                                            },
                                            "loadFileException_Last_Updated_UserName": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "loadFileException_System_Code": {
                                                "value": "FV0006",
                                                "type": "String"
                                            },
                                            "loadFileException_System_Description": {
                                                "value": {
                                                    "value": "@concat('Exception occured while executing Pipeline ',pipeline().Pipeline, ' Run Id: ' ,pipeline().RunId, ' Trigger Time: ',pipeline().TriggerTime, 'Error Message: ' , activity('LKP_Get_First_Row').error.message)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "protocal_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "src_File_Id": {
                                                "value": {
                                                    "value": "@activity('LKP_Load_File_Source_Id').output.firstRow.SRC_FILE_ID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SqlServerStoredProcedure6",
                                    "description": "Update the Exception in FILE_LOG_BASE table",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP_Log_Exception_Get_First_Row_CSV",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Update_LoadFileLog_By_FileName]",
                                        "storedProcedureParameters": {
                                            "src_File_Name": {
                                                "value": {
                                                    "value": "@pipeline().parameters.Filename",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "src_File_Processed_Exception_Flag": {
                                                "value": "Y",
                                                "type": "String"
                                            },
                                            "src_Last_Updated_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "src_Last_UpdatedBy_User": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "src_Dataflow_Current_status": {
                                                "value": "ERROR",
                                                "type": "string"
                                            },
                                            "src_Dataflow_Remarks": {
                                                "value": {
                                                    "value": "@concat('Exception occured while executing Pipeline ',pipeline().Pipeline, ' Run Id: ' ,pipeline().RunId, ' Trigger Time: ',pipeline().TriggerTime)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "LKP_Load_File_Source_Id",
                        "description": "Get SRC_ID from LOAD_FILE_LOG_BASE table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT TOP 1 SRC_FILE_ID FROM LOAD_FILE_LOG_BASE WHERE  SRC_FILE_NM = ''',pipeline().parameters.Filename,'''')",
                                    "type": "Expression"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_ASQL_BASE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Base_Database_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Name",
                                        "type": "Expression"
                                    },
                                    "Base_Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                        "type": "Expression"
                                    },
                                    "Table_Name": "loadfilesourceid"
                                }
                            }
                        }
                    },
                    {
                        "name": "SP_Log_Error_Read_CSV",
                        "description": "Log Exception - Unsupported File type",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "LKP_Read_CSV",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_Add_Load_File_Exception_Base]",
                            "storedProcedureParameters": {
                                "client_Ref_Id": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "client_Source_Ref_Id": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "excptn_Ref_Id": {
                                    "value": "6",
                                    "type": "Int32"
                                },
                                "loadFileException_Created_Date": {
                                    "value": {
                                        "value": "@utcnow()",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "loadFileException_CreatedBy_UserName": {
                                    "value": "Data-Factory",
                                    "type": "String"
                                },
                                "loadFileException_Last_Updated_Date": {
                                    "value": null,
                                    "type": "DateTime"
                                },
                                "loadFileException_Last_Updated_UserName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "loadFileException_System_Code": {
                                    "value": "FV0006",
                                    "type": "String"
                                },
                                "loadFileException_System_Description": {
                                    "value": {
                                        "value": "@concat('Exception occured while executing Pipeline ',pipeline().Pipeline, ' Run Id: ' ,pipeline().RunId, ' Trigger Time: ',pipeline().TriggerTime, 'Error Message: ' , activity('LKP_Read_CSV').error.message)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "protocal_Ref_Id": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "src_File_Id": {
                                    "value": {
                                        "value": "@activity('LKP_Load_File_Source_Id').output.firstRow.SRC_FILE_ID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase_Base_Database",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "Base_Database_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Name",
                                    "type": "Expression"
                                },
                                "Base_Database_Domain_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "SqlServerStoredProcedure9",
                        "description": "Update the Exception in FILE_LOG_BASE table",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "SP_Log_Error_Read_CSV",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_Update_LoadFileLog]",
                            "storedProcedureParameters": {
                                "src_File_Name": {
                                    "value": {
                                        "value": "@pipeline().parameters.Filename",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "src_File_Processed_Exception_Flag": {
                                    "value": "Y",
                                    "type": "String"
                                },
                                "src_Last_Updated_Date": {
                                    "value": {
                                        "value": "@utcnow()",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "src_Last_UpdatedBy_User": {
                                    "value": "Data-Factory",
                                    "type": "String"
                                },
                                "src_Dataflow_Current_status": {
                                    "value": "ERROR",
                                    "type": "String"
                                },
                                "src_Dataflow_Remarks": {
                                    "value": {
                                        "value": "@concat('Exception occured while executing Pipeline ',pipeline().Pipeline, ' Run Id: ' ,pipeline().RunId, ' Trigger Time: ',pipeline().TriggerTime)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase_Base_Database",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "Base_Database_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Name",
                                    "type": "Expression"
                                },
                                "Base_Database_Domain_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "parameters": {
                    "Filename": {
                        "type": "string",
                        "defaultValue": "CDAG SCD Sample Data v0.1.csv"
                    },
                    "Azure_Blob_Source_Path": {
                        "type": "string",
                        "defaultValue": "client1"
                    },
                    "Azure_Blob_Conn_String": {
                        "type": "string",
                        "defaultValue": "msistore"
                    },
                    "Database_Name": {
                        "type": "string",
                        "defaultValue": "USCQINT07PSDB02"
                    },
                    "Database_Domain_Name": {
                        "type": "string",
                        "defaultValue": "uscpint000sql01.database.windows.net"
                    },
                    "Temp_Database_Name": {
                        "type": "string",
                        "defaultValue": "USCQINT07PSDB02"
                    },
                    "Temp_Database_Domain_Name": {
                        "type": "string",
                        "defaultValue": "uscpint000sql01.database.windows.net"
                    },
                    "Base_Database_Name": {
                        "type": "string"
                    },
                    "Base_Database_Domain_Name": {
                        "type": "string"
                    }
                },
                "variables": {
                    "IsFileEmpty": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "Start_Date": {
                        "type": "String"
                    },
                    "Start_Month": {
                        "type": "String"
                    },
                    "End_Date": {
                        "type": "String"
                    },
                    "End_Month": {
                        "type": "String"
                    },
                    "Protocol_Exists": {
                        "type": "String",
                        "defaultValue": "0"
                    },
                    "IsFirstRow": {
                        "type": "String",
                        "defaultValue": "0"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_ABLB_CSV_Header')]",
                "[concat(variables('factoryId'), '/datasets/DS_ASQL_BASE')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Base_Database')]",
                "[concat(variables('factoryId'), '/pipelines/PL_Validate_CSV_Header')]",
                "[concat(variables('factoryId'), '/datasets/DS_ABLB_CSV_Protocol')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_Validate_File')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "SV_Set_Filetype",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "LKP_Get_Allowed_File_Types",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FileType",
                            "value": {
                                "value": "@substring(pipeline().parameters.Filename,add(lastindexof(pipeline().parameters.Filename,'.'),0),sub(sub(length(pipeline().parameters.Filename),lastindexof(pipeline().parameters.Filename,'.')),0))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "LKP_Get_Allowed_File_Types",
                        "description": "Get the list of all the supported file types from FILE_TYPE_REF_BASE table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[dbo].[usp_Get_Distinct_FileType]"
                            },
                            "dataset": {
                                "referenceName": "DS_ASQL_BASE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Base_Database_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Name",
                                        "type": "Expression"
                                    },
                                    "Base_Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                        "type": "Expression"
                                    },
                                    "Table_Name": "[[dbo].[usp_Get_Distinct_FileType]"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "FLT_Filter_FileType",
                        "type": "Filter",
                        "dependsOn": [
                            {
                                "activity": "SV_Set_Filetype",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LKP_Get_Allowed_File_Types').output.value",
                                "type": "Expression"
                            },
                            "condition": {
                                "value": "@equals(item().FTR_TYPE,variables('FileType'))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "IF_Validate_Filetype",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "FLT_Filter_FileType",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('FLT_Filter_FileType').output.FilteredItemsCount,0)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "LKP_Get_Exception_List",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "SV_Set_Flag_Invalid",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderStoredProcedureName": "[[dbo].[usp_Get_Exception_References]",
                                            "storedProcedureParameters": {
                                                "exception_Ref_Id": {
                                                    "type": "Int32",
                                                    "value": null
                                                }
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "DS_ASQL_BASE",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Base_Database_Name": {
                                                    "value": "@pipeline().parameters.Base_Database_Name",
                                                    "type": "Expression"
                                                },
                                                "Base_Database_Domain_Name": {
                                                    "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                    "type": "Expression"
                                                },
                                                "Table_Name": "a"
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "FLT_Filter_By_File_Not_Supported_Exception",
                                    "type": "Filter",
                                    "dependsOn": [
                                        {
                                            "activity": "LKP_Get_Exception_List",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "items": {
                                            "value": "@activity('LKP_Get_Exception_List').output.value",
                                            "type": "Expression"
                                        },
                                        "condition": {
                                            "value": "@equals(item().EXCPTN_REF_CD,'FV0001')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "LKP_Get_File_Source_Id",
                                    "description": "Get SRC_ID from LOAD_FILE_LOG_BASE table",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "FLT_Filter_By_File_Not_Supported_Exception",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('SELECT TOP 1 SRC_FILE_ID FROM LOAD_FILE_LOG_BASE WHERE  SRC_FILE_NM = ''',pipeline().parameters.Filename,'''')",
                                                "type": "Expression"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "DS_ASQL_BASE",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Base_Database_Name": {
                                                    "value": "@pipeline().parameters.Base_Database_Name",
                                                    "type": "Expression"
                                                },
                                                "Base_Database_Domain_Name": {
                                                    "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                    "type": "Expression"
                                                },
                                                "Table_Name": "a"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SV_Set_Query",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "LKP_Get_File_Source_Id",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "Query",
                                        "value": "UPDATE LOAD_FILE_LOG_BASE\nSET  SRC_FILE_PROCESSED_EXCPTN_FLAG = 'Y',\nSRC_LAST_UPDATED_DT_TM = GETDATE(),\nSRC_LAST_UPDATED_BY_USERNM = 'Data-factory'\nWHERE SRC_FILE_NM = '"
                                    }
                                },
                                {
                                    "name": "SV_Set_Flag_Invalid",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "IsFileValid",
                                        "value": "0"
                                    }
                                },
                                {
                                    "name": "SP_Log_Exception_Base",
                                    "description": "Log Exception - Unsupported File type",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SV_Set_Query",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Add_Load_File_Exception_Base]",
                                        "storedProcedureParameters": {
                                            "client_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "client_Source_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "excptn_Ref_Id": {
                                                "value": {
                                                    "value": "@activity('FLT_Filter_By_File_Not_Supported_Exception').output.value[0].EXCPTN_REF_ID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "loadFileException_Created_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "loadFileException_CreatedBy_UserName": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "loadFileException_Last_Updated_Date": {
                                                "value": null,
                                                "type": "DateTime"
                                            },
                                            "loadFileException_Last_Updated_UserName": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "loadFileException_System_Code": {
                                                "value": {
                                                    "value": "@activity('FLT_Filter_By_File_Not_Supported_Exception').output.value[0].EXCPTN_REF_CD",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "loadFileException_System_Description": {
                                                "value": {
                                                    "value": "@activity('FLT_Filter_By_File_Not_Supported_Exception').output.value[0].EXCPTN_REF_DESC",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "protocal_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "src_File_Id": {
                                                "value": {
                                                    "value": "@activity('LKP_Get_File_Source_Id').output.firstRow.SRC_FILE_ID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SP_Update_File_Log_Base",
                                    "description": "Update the Exception in FILE_LOG_BASE table",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP_Log_Exception_Base",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Update_LoadFileLog_By_FileName]",
                                        "storedProcedureParameters": {
                                            "src_File_Name": {
                                                "value": {
                                                    "value": "@pipeline().parameters.Filename",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "src_File_Processed_Exception_Flag": {
                                                "value": "Y",
                                                "type": "String"
                                            },
                                            "src_Last_Updated_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "src_Last_UpdatedBy_User": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "src_Dataflow_Current_status": {
                                                "value": "ERROR"
                                            },
                                            "src_Dataflow_Remarks": {
                                                "value": {
                                                    "value": "@activity('FLT_Filter_By_File_Not_Supported_Exception').output.value[0].EXCPTN_REF_DESC",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "IF_CSV_Process",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "IF_Validate_Filetype",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(equals(variables('IsFileValid'),'1'),equals(variables('FileType'),'.csv'))",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "EPL_Validate_CSV",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_Validate_CSV",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "Filename": {
                                                "value": "@pipeline().parameters.Filename",
                                                "type": "Expression"
                                            },
                                            "Azure_Blob_Source_Path": {
                                                "value": "@pipeline().parameters.Azure_Blob_Source_Path",
                                                "type": "Expression"
                                            },
                                            "Azure_Blob_Conn_String": {
                                                "value": "@pipeline().parameters.Azure_Blob_Conn_String",
                                                "type": "Expression"
                                            },
                                            "Database_Name": {
                                                "value": "@pipeline().parameters.Database_Name",
                                                "type": "Expression"
                                            },
                                            "Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Database_Domain_Name",
                                                "type": "Expression"
                                            },
                                            "Temp_Database_Name": {
                                                "value": "@pipeline().parameters.Temp_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Temp_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Temp_Database_Domain_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "Filename": {
                        "type": "string",
                        "defaultValue": "demo1_577972680.csv"
                    },
                    "Azure_Blob_Source_Path": {
                        "type": "string",
                        "defaultValue": "a"
                    },
                    "Azure_Blob_Conn_String": {
                        "type": "string",
                        "defaultValue": "a"
                    },
                    "Database_Name": {
                        "type": "string",
                        "defaultValue": "USCQINT07PSDB02"
                    },
                    "Database_Domain_Name": {
                        "type": "string",
                        "defaultValue": "uscpint000sql01.database.windows.net"
                    },
                    "Temp_Database_Name": {
                        "type": "string",
                        "defaultValue": "USCQINT07PSDB02"
                    },
                    "Temp_Database_Domain_Name": {
                        "type": "string",
                        "defaultValue": "uscpint000sql01.database.windows.net"
                    },
                    "Base_Database_Name": {
                        "type": "string",
                        "defaultValue": "USCQINT07PSDB01"
                    },
                    "Base_Database_Domain_Name": {
                        "type": "string",
                        "defaultValue": "uscpint000sql01.database.windows.net"
                    }
                },
                "variables": {
                    "FileType": {
                        "type": "String"
                    },
                    "Query": {
                        "type": "String"
                    },
                    "IsFileValid": {
                        "type": "String",
                        "defaultValue": "1"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_ASQL_BASE')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Base_Database')]",
                "[concat(variables('factoryId'), '/pipelines/PL_Validate_CSV')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_Validate_CSV_Header')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "LKP_Get_Protocol_Dictionary",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT q.PDBIZNM_NAME AS ''PRD_DF_BUSINESS_NA'', p.PRD_DF_NM, p.PRD_DF_COL_ID,p.PRD_DF_SYSTEM, p.PROTOCOL_RD_ID, p.PROTOCOL_REF_ID,\np.PRD_DF_REFERENCE_TABLE,PRD_DF_ORDER_INPUT_FILE \nFROM PROTOCOL_REF_DICTNRY_BASE p inner join [dbo].[PROTOCOL_DICTNRY_BIZNM_REF ] q\nON p.PDBIZNM_REF_CODE = q.PDBIZNM_CODE WHERE p.PRD_DF_ALWAYS_REQ = ''Y'' AND p.PRD_ACTIVE_FLAG = ''Y''  AND p.PROTOCOL_REF_ID = ',pipeline().parameters.Protocol_Ref_Id, ' ORDER BY p.PRD_DF_ORDER_INPUT_FILE')",
                                    "type": "Expression"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_ASQL_BASE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Base_Database_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Name",
                                        "type": "Expression"
                                    },
                                    "Base_Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                        "type": "Expression"
                                    },
                                    "Table_Name": "getprotocol"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "LKP_Get_CSV_Header",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "LKP_Get_Protocol_Dictionary",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "BlobSource",
                                "recursive": false
                            },
                            "dataset": {
                                "referenceName": "DS_ABLB_CSV_Header",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Azure_Blob_Secret": {
                                        "value": "@pipeline().parameters.Azure_Blob_Conn_String",
                                        "type": "Expression"
                                    },
                                    "Filename": {
                                        "value": "@pipeline().parameters.Filename",
                                        "type": "Expression"
                                    },
                                    "Azure_File_Path": {
                                        "value": "@pipeline().parameters.Azure_Blob_Source_Path",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "IF_Invalid_File",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "AF_Validate_CSV_Header",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('AF_Validate_CSV_Header').output.isValid, false)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "SP_LogException07",
                                    "description": "Log Exception - Unsupported File type",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "LKP_Get_Source_ID",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Add_Load_File_Exception_Base]",
                                        "storedProcedureParameters": {
                                            "client_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "client_Source_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "excptn_Ref_Id": {
                                                "value": "3",
                                                "type": "Int32"
                                            },
                                            "loadFileException_Created_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "loadFileException_CreatedBy_UserName": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "loadFileException_Last_Updated_Date": {
                                                "value": null,
                                                "type": "DateTime"
                                            },
                                            "loadFileException_Last_Updated_UserName": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "loadFileException_System_Code": {
                                                "value": "FV0003",
                                                "type": "String"
                                            },
                                            "loadFileException_System_Description": {
                                                "value": {
                                                    "value": "@concat('Received columns ', activity('AF_Validate_CSV_Header').output.fileColumns , '  are not matching with the column ', activity('AF_Validate_CSV_Header').output.dbColumns , ' for the Protocol.')",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "protocal_Ref_Id": {
                                                "value": {
                                                    "value": "@pipeline().parameters.Protocol_Ref_Id",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "src_File_Id": {
                                                "value": {
                                                    "value": "@activity('LKP_Get_Source_ID').output.firstRow.SRC_FILE_ID\n",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SP_Update_File_Log007",
                                    "description": "Update the Exception in FILE_LOG_BASE table",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP_LogException07",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Update_LoadFileLog_By_FileName]",
                                        "storedProcedureParameters": {
                                            "src_File_Name": {
                                                "value": {
                                                    "value": "@pipeline().parameters.Filename",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "src_File_Processed_Exception_Flag": {
                                                "value": "Y",
                                                "type": "String"
                                            },
                                            "src_Last_Updated_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "src_Last_UpdatedBy_User": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "src_Dataflow_Current_status": {
                                                "value": "ERROR",
                                                "type": "String"
                                            },
                                            "src_Dataflow_Remarks": {
                                                "value": {
                                                    "value": "@concat('Received columns are not in the expected format.')",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "LKP_Get_Source_ID",
                                    "description": "Get SRC_ID from LOAD_FILE_LOG_BASE table",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('SELECT TOP 1 SRC_FILE_ID FROM LOAD_FILE_LOG_BASE WHERE  SRC_FILE_NM = ''',pipeline().parameters.Filename,'''')",
                                                "type": "Expression"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "DS_ASQL_BASE",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Base_Database_Name": {
                                                    "value": "@pipeline().parameters.Base_Database_Name",
                                                    "type": "Expression"
                                                },
                                                "Base_Database_Domain_Name": {
                                                    "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                    "type": "Expression"
                                                },
                                                "Table_Name": "a"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "SP_Log_Exception_Get_CSV_Header",
                        "description": "Log Exception - Unsupported File type",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "SP_Update_File_ExceptionFlag_CSV_Header",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_Add_Load_File_Exception_Base]",
                            "storedProcedureParameters": {
                                "client_Ref_Id": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "client_Source_Ref_Id": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "excptn_Ref_Id": {
                                    "value": "6",
                                    "type": "Int32"
                                },
                                "loadFileException_Created_Date": {
                                    "value": {
                                        "value": "@utcnow()",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "loadFileException_CreatedBy_UserName": {
                                    "value": "Data-Factory",
                                    "type": "String"
                                },
                                "loadFileException_Last_Updated_Date": {
                                    "value": null,
                                    "type": "DateTime"
                                },
                                "loadFileException_Last_Updated_UserName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "loadFileException_System_Code": {
                                    "value": "FV0006",
                                    "type": "String"
                                },
                                "loadFileException_System_Description": {
                                    "value": {
                                        "value": "@concat('Exception occured while executing Pipeline ',pipeline().Pipeline, ' Run Id: ' ,pipeline().RunId, ' Trigger Time: ',pipeline().TriggerTime, 'Error Message: ' , activity('LKP_Get_CSV_Header').error.message)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "protocal_Ref_Id": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "src_File_Id": {
                                    "value": {
                                        "value": "@pipeline().parameters.File_Source_Id",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase_Base_Database",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "Base_Database_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Name",
                                    "type": "Expression"
                                },
                                "Base_Database_Domain_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "SP_Update_File_ExceptionFlag_CSV_Header",
                        "description": "Update the Exception in FILE_LOG_BASE table",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "LKP_Get_CSV_Header",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_Update_LoadFileLog_By_FileName]",
                            "storedProcedureParameters": {
                                "src_File_Name": {
                                    "value": {
                                        "value": "@pipeline().parameters.Filename",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "src_File_Processed_Exception_Flag": {
                                    "value": "Y",
                                    "type": "String"
                                },
                                "src_Last_Updated_Date": {
                                    "value": {
                                        "value": "@utcnow()",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "src_Last_UpdatedBy_User": {
                                    "value": "Data-Factory",
                                    "type": "String"
                                },
                                "src_Dataflow_Current_status": {
                                    "value": "ERROR",
                                    "type": "String"
                                },
                                "src_Dataflow_Remarks": {
                                    "value": {
                                        "value": "@concat('Exception occured while executing Pipeline ',pipeline().Pipeline, ' Run Id: ' ,pipeline().RunId, ' Trigger Time: ',pipeline().TriggerTime)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase_Base_Database",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "Base_Database_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Name",
                                    "type": "Expression"
                                },
                                "Base_Database_Domain_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "IF_Valid_Load_Data",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "IF_Invalid_File",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('AF_Validate_CSV_Header').output.isValid, true)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "EPL_Load_CSV_File",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_Load_CSV_Data",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "Filename": {
                                                "value": "@pipeline().parameters.Filename",
                                                "type": "Expression"
                                            },
                                            "Azure_Blob_Source_Path": {
                                                "value": "@pipeline().parameters.Azure_Blob_Source_Path",
                                                "type": "Expression"
                                            },
                                            "Azure_Blob_Conn_String": {
                                                "value": "@pipeline().parameters.Azure_Blob_Conn_String",
                                                "type": "Expression"
                                            },
                                            "Database_Name": {
                                                "value": "@pipeline().parameters.Database_Name",
                                                "type": "Expression"
                                            },
                                            "Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Database_Domain_Name",
                                                "type": "Expression"
                                            },
                                            "Protocol_Ref_Id": {
                                                "value": "@pipeline().parameters.Protocol_Ref_Id",
                                                "type": "Expression"
                                            },
                                            "File_Source_Id": {
                                                "value": "@pipeline().parameters.File_Source_Id",
                                                "type": "Expression"
                                            },
                                            "Temp_Database_Name": {
                                                "value": "@pipeline().parameters.Temp_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Temp_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Temp_Database_Domain_Name",
                                                "type": "Expression"
                                            },
                                            "File_Header_Row": {
                                                "value": "@activity('LKP_Get_CSV_Header').output.firstRow",
                                                "type": "Expression"
                                            },
                                            "Dictionary_Column_Count": {
                                                "value": "@activity('LKP_Get_Protocol_Dictionary').output.count",
                                                "type": "Expression"
                                            },
                                            "Query": {
                                                "value": "@activity('AF_Validate_CSV_Header').output.tableScript",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            },
                                            "Data_Table_Name": {
                                                "value": "@activity('AF_Validate_CSV_Header').output.refTableName",
                                                "type": "Expression"
                                            },
                                            "Data_Table_Select_Query": {
                                                "value": "@activity('AF_Validate_CSV_Header').output.selectQuery",
                                                "type": "Expression"
                                            },
                                            "columnMapping": {
                                                "value": "@json(activity('AF_Validate_CSV_Header').output.columnMappings)",
                                                "type": "Expression"
                                            },
                                            "sourceStructure": {
                                                "value": "@json(activity('AF_Validate_CSV_Header').output.sourceStructure)",
                                                "type": "Expression"
                                            },
                                            "sinkStructure": {
                                                "value": "@json(activity('AF_Validate_CSV_Header').output.sinkStructure)",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Log_Exception_For_Loading_Data1",
                                    "description": "Log Exception - Unsupported File type",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EPL_Load_CSV_File",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Add_Load_File_Exception_Base]",
                                        "storedProcedureParameters": {
                                            "client_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "client_Source_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "excptn_Ref_Id": {
                                                "value": "6",
                                                "type": "Int32"
                                            },
                                            "loadFileException_Created_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "loadFileException_CreatedBy_UserName": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "loadFileException_Last_Updated_Date": {
                                                "value": null,
                                                "type": "DateTime"
                                            },
                                            "loadFileException_Last_Updated_UserName": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "loadFileException_System_Code": {
                                                "value": "FV0006",
                                                "type": "String"
                                            },
                                            "loadFileException_System_Description": {
                                                "value": {
                                                    "value": "@concat('Exception occured while executing Pipeline ',pipeline().Pipeline, ' Run Id: ' ,pipeline().RunId, ' Trigger Time: ',pipeline().TriggerTime, 'Error Message: ' , activity('EPL_Load_CSV_File').error.message)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "protocal_Ref_Id": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "src_File_Id": {
                                                "value": {
                                                    "value": "@pipeline().parameters.File_Source_Id",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Log_Exception_For_Loading_Data",
                                    "description": "Update the Exception in FILE_LOG_BASE table",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Log_Exception_For_Loading_Data1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Update_LoadFileLog_By_FileName]",
                                        "storedProcedureParameters": {
                                            "src_File_Name": {
                                                "value": {
                                                    "value": "@pipeline().parameters.Filename",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "src_File_Processed_Exception_Flag": {
                                                "value": "Y",
                                                "type": "String"
                                            },
                                            "src_Last_Updated_Date": {
                                                "value": {
                                                    "value": "@utcnow()",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "src_Last_UpdatedBy_User": {
                                                "value": "Data-Factory",
                                                "type": "String"
                                            },
                                            "src_Dataflow_Current_status": {
                                                "value": "ERROR",
                                                "type": "String"
                                            },
                                            "src_Dataflow_Remarks": {
                                                "value": {
                                                    "value": "@concat('Exception occured while executing Pipeline ',pipeline().Pipeline, ' Run Id: ' ,pipeline().RunId, ' Trigger Time: ',pipeline().TriggerTime)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "SV_DB_JSON",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "LKP_Get_CSV_Header",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "PropertyNo1",
                            "value": {
                                "value": "@string(activity('LKP_Get_Protocol_Dictionary').output.value)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SV_FILE_JSON",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "SV_DB_JSON",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "PropertyNo2",
                            "value": {
                                "value": "@string(activity('LKP_Get_CSV_Header').output.firstRow)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "AF_Validate_CSV_Header",
                        "type": "AzureFunctionActivity",
                        "dependsOn": [
                            {
                                "activity": "SV_FILE_JSON",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "functionName": "CSVFileValidator",
                            "method": "POST",
                            "headers": {},
                            "body": {
                                "value": "@concat('{\n\"fileJson\": ',variables('PropertyNo2'),',\n\"dbJson\": ',variables('PropertyNo1'),'\n}')",
                                "type": "Expression"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AZ_",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "Filename": {
                        "type": "string",
                        "defaultValue": "ODAG_EOD_001_612492397.csv"
                    },
                    "Azure_Blob_Source_Path": {
                        "type": "string",
                        "defaultValue": "client3"
                    },
                    "Azure_Blob_Conn_String": {
                        "type": "string",
                        "defaultValue": "msistore"
                    },
                    "Database_Name": {
                        "type": "string",
                        "defaultValue": "USCQINT07PSDB02"
                    },
                    "Database_Domain_Name": {
                        "type": "string",
                        "defaultValue": "uscpint000sql01.database.windows.net"
                    },
                    "Protocol_Ref_Id": {
                        "type": "string",
                        "defaultValue": "18"
                    },
                    "File_Source_Id": {
                        "type": "string",
                        "defaultValue": "1209"
                    },
                    "Temp_Database_Name": {
                        "type": "string",
                        "defaultValue": "USCQINT07PSDB02"
                    },
                    "Temp_Database_Domain_Name": {
                        "type": "string",
                        "defaultValue": "uscpint000sql01.database.windows.net"
                    },
                    "Base_Database_Name": {
                        "type": "string",
                        "defaultValue": "USCQINT07PSDB01"
                    },
                    "Base_Database_Domain_Name": {
                        "type": "string",
                        "defaultValue": "uscpint000sql01.database.windows.net"
                    }
                },
                "variables": {
                    "DB_Columns": {
                        "type": "Array"
                    },
                    "File_Columns": {
                        "type": "Array"
                    },
                    "Property": {
                        "type": "String",
                        "defaultValue": "Prop_2"
                    },
                    "DB_Column": {
                        "type": "String"
                    },
                    "IsValid": {
                        "type": "Boolean",
                        "defaultValue": true
                    },
                    "IsMissingColumn": {
                        "type": "String",
                        "defaultValue": "0"
                    },
                    "PropertyNo1": {
                        "type": "String",
                        "defaultValue": "0"
                    },
                    "PropertyNo2": {
                        "type": "String",
                        "defaultValue": "0"
                    },
                    "Query1": {
                        "type": "String"
                    },
                    "Query2": {
                        "type": "String"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_ASQL_BASE')]",
                "[concat(variables('factoryId'), '/datasets/DS_ABLB_CSV_Header')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Base_Database')]",
                "[concat(variables('factoryId'), '/linkedServices/AZ_')]",
                "[concat(variables('factoryId'), '/pipelines/PL_Load_CSV_Data')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_Load_CSV_Data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "UTL_Query_Builder",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "SV_Create_Table_Query",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@not(contains(pipeline().parameters.File_Header_Row,variables('Property_Name')))",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "SV_Prop_Number1",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "PropertyNo1",
                                        "value": {
                                            "value": "@string(add(int(variables('PropertyNo2')),1))",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SV_Prop_Number2",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SV_Prop_Number1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "PropertyNo2",
                                        "value": {
                                            "value": "@variables('PropertyNo1')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "IF_User_Column",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "SV_Prop_Number2",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(contains(pipeline().parameters.File_Header_Row,variables('Property_Name'))\n,greater( int(variables('PropertyNo2')),  pipeline().parameters.Dictionary_Column_Count))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "AV_User_Columns",
                                                "type": "AppendVariable",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "User_Columns",
                                                    "value": {
                                                        "value": "@pipeline().parameters.File_Header_Row[variables('Property_Name')]",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SetVariable1",
                                                "type": "SetVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "AV_User_Columns",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "Query1",
                                                    "value": {
                                                        "value": "@concat(variables('Query2'), ' \"',\npipeline().parameters.File_Header_Row[variables('Property_Name')],\n'\" VARCHAR(MAX), '\n)",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SetVariable2",
                                                "type": "SetVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "SetVariable1",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "Query2",
                                                    "value": {
                                                        "value": "@variables('Query1')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "SV_Property_Name",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "IF_User_Column",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "Property_Name",
                                        "value": {
                                            "value": "@concat('Prop_', variables('PropertyNo1'))",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "timeout": "7.00:00:00"
                        }
                    },
                    {
                        "name": "SV_Create_Table_Query",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "SV_Table_Name",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Query2",
                            "value": {
                                "value": "@concat('CREATE TABLE \"', variables('Table_Name'), '\" ([CLIENT_SRC_REF_ID] VARCHAR(MAX), [CLIENT_REF_ID] VARCHAR(MAX), ', pipeline().parameters.Query)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SV_Table_Name",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "SV_Set_No2",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Table_Name",
                            "value": {
                                "value": "@concat('temp_', replace(replace(pipeline().parameters.Filename, '.csv', ''), ' ', ''))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SV_Close_Query",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "UTL_Query_Builder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Query1",
                            "value": {
                                "value": "@concat(substring(variables('Query2'),0, lastindexof(variables('Query2'), ',')), ' )')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SP_Create_Temp_Table",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "SV_Close_Query",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_Create_Dynamic_Table]",
                            "storedProcedureParameters": {
                                "DSQuery": {
                                    "value": {
                                        "value": "@variables('Query1')",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase_Temporary_Database",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "Temp_Database_Name": {
                                    "value": "@pipeline().parameters.Temp_Database_Name",
                                    "type": "Expression"
                                },
                                "Temp_Database_Domain_Name": {
                                    "value": "@pipeline().parameters.Temp_Database_Domain_Name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "SV_Set_Property_Name",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Property_Name",
                            "value": {
                                "value": "@concat('Prop_',string(pipeline().parameters.Dictionary_Column_Count))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "CD_Load_Data_To_Staging",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "SV_Timestamp",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT [CLIENT_REF_ID], [CLIENT_SRC_REF_ID], ', pipeline().parameters.File_Source_Id, ' AS [SRC_FILE_ID], ' ,pipeline().parameters.Protocol_Ref_Id, ' AS [PROTOCOL_REF_ID], \"Client Source\" AS [SRC_CD], [ClientRecord_PK_ID] AS [CLIENT_REC_PK_ID],[ClientRecord_CreatedDateTime] AS [CLIENT_REC_CREATED_DT_TM], [ClientRecord_Active_Flag] AS [CLIENT_REC_ACTIVE_FLAG],',pipeline().parameters.Data_Table_Select_Query,\n'''Data-factory'' AS\t[CREATED_BY_USRNM]  , ''', variables('Created_Dt_Tm'), ''' AS\t[CREATED_DT_TM] FROM \"' , variables('Table_Name'), '\"')",
                                    "type": "Expression"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "sqlWriterStoredProcedureName": {
                                    "value": "@variables('SP_Name')",
                                    "type": "Expression"
                                },
                                "sqlWriterTableType": {
                                    "value": "@concat(replace(pipeline().parameters.Data_Table_Name, 'BASE', 'STG'), '_TYPE')",
                                    "type": "Expression"
                                },
                                "storedProcedureTableTypeParameterName": {
                                    "value": "@replace(pipeline().parameters.Data_Table_Name, 'BASE', 'STG')",
                                    "type": "Expression"
                                }
                            },
                            "enableStaging": false,
                            "enableSkipIncompatibleRow": true
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ASQL_Temp",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Temp_Database_Name": {
                                        "value": "@pipeline().parameters.Temp_Database_Name",
                                        "type": "Expression"
                                    },
                                    "Temp_Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Temp_Database_Domain_Name",
                                        "type": "Expression"
                                    },
                                    "Temp_Table_Name": {
                                        "value": "@variables('Table_Name')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ASQL_CDAG_STG",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Database_Name": {
                                        "value": "@pipeline().parameters.Database_Name",
                                        "type": "Expression"
                                    },
                                    "Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Database_Domain_Name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "FE_User_Defined_Column",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "CD_Load_Data_To_Staging",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('User_Columns')",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "CD_Load_User_Defined_Data",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "SV_User_Data_SP",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('SELECT [CLIENT_REF_ID], [CLIENT_SRC_REF_ID], ''', pipeline().parameters.File_Source_Id, ''' AS [SRC_FILE_ID],\"Client Source\" AS [SRC_CD],\"Cardholder ID\" AS [SCD_CARD_HLDR_ID], \"Contract ID\" AS [SCD_ORG_CNTRCT_ID],\"Plan ID\" AS [SCD_ORG_PLN_ID] ,''', pipeline().parameters.Protocol_Ref_Id, ''' AS [PROTOCOL_REF_ID], ''1'' AS [BASE_TAB_REC_ID] ,''', activity('LKP_Get_BizNm_Code').output.firstRow.PDBIZNM_CODE, ''' AS [UDU_DF_NM] , \"', item(), '\" AS [UDU_DF_VAL],''Y'' AS [UDU_ACTIVE_FLAG],NULL AS [SRC_DATA_FROM_BEGIN_DT], NULL AS [SRC_DATA_FROM_END_DT] , ''Data-factory'' AS [UDU_CREATED_BY_USERNM], ''', utcnow(), ''' AS [UDU_CREATED_DT_TM] FROM [', variables('Table_Name'), ']')",
                                                "type": "Expression"
                                            }
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "sqlWriterStoredProcedureName": {
                                                "value": "@variables('SP_User_Data')",
                                                "type": "Expression"
                                            },
                                            "sqlWriterTableType": "USER_DEFINED_UNVRSE_BASE_TYPE"
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "DS_ASQL_Temp",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Temp_Database_Name": {
                                                    "value": "@pipeline().parameters.Temp_Database_Name",
                                                    "type": "Expression"
                                                },
                                                "Temp_Database_Domain_Name": {
                                                    "value": "@pipeline().parameters.Temp_Database_Domain_Name",
                                                    "type": "Expression"
                                                },
                                                "Temp_Table_Name": {
                                                    "value": "@variables('Table_Name')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "DS_ASQL_CDAG_SCD_USER",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Database_Name": {
                                                    "value": "@pipeline().parameters.Database_Name",
                                                    "type": "Expression"
                                                },
                                                "Database_Domain_Name": {
                                                    "value": "@pipeline().parameters.Database_Domain_Name",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "LKP_Get_BizNm_Code",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderStoredProcedureName": "[[dbo].[usp_Get_BizNmCode_For_User_Defined_Column]",
                                            "storedProcedureParameters": {
                                                "Client_Id": {
                                                    "type": "Int32",
                                                    "value": {
                                                        "value": "@activity('LKP_Get_Client_Source').output.firstRow.CLIENT_REF_ID",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "Protocol_Id": {
                                                    "type": "Int32",
                                                    "value": {
                                                        "value": "@pipeline().parameters.Protocol_Ref_Id",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "User_Defined_Column_Name": {
                                                    "type": "String",
                                                    "value": {
                                                        "value": "@item()",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "DS_ASQL_BASE",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Base_Database_Name": {
                                                    "value": "@pipeline().parameters.Base_Database_Name",
                                                    "type": "Expression"
                                                },
                                                "Base_Database_Domain_Name": {
                                                    "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                    "type": "Expression"
                                                },
                                                "Table_Name": "PROTOCOL_DICTNRY_BIZNM_REF"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SV_User_Data_SP",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "LKP_Get_BizNm_Code",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "SP_User_Data",
                                        "value": {
                                            "value": "@concat('[dbo].[usp_Load_',replace(pipeline().parameters.Data_Table_Name,'BASE','STG') , '_User_Data',']')",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "SV_Set_No1",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "SV_Set_Property_Name",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "PropertyNo1",
                            "value": {
                                "value": "@string(pipeline().parameters.Dictionary_Column_Count)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SV_Set_No2",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "SV_Set_No1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "PropertyNo2",
                            "value": {
                                "value": "@variables('PropertyNo1')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SP_Delete_Temp_Table",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "FE_User_Defined_Column",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_Create_Dynamic_Table]",
                            "storedProcedureParameters": {
                                "DSQuery": {
                                    "value": {
                                        "value": "@concat('DROP TABLE \"', variables('Table_Name'), '\"')",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase_Temporary_Database",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "Temp_Database_Name": {
                                    "value": "@pipeline().parameters.Temp_Database_Name",
                                    "type": "Expression"
                                },
                                "Temp_Database_Domain_Name": {
                                    "value": "@pipeline().parameters.Temp_Database_Domain_Name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "CD_Load_Data_To_Base_Database",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "CD_Load_Data_To_Staging",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT * FROM ', replace(pipeline().parameters.Data_Table_Name,'BASE', 'STG'), ' WHERE SRC_FILE_ID = ', pipeline().parameters.File_Source_Id)",
                                    "type": "Expression"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "sqlWriterStoredProcedureName": {
                                    "value": "@concat('[dbo].[usp_Load_',pipeline().parameters.Data_Table_Name, ']')",
                                    "type": "Expression"
                                },
                                "sqlWriterTableType": {
                                    "value": "@concat(pipeline().parameters.Data_Table_Name,'_TYPE')",
                                    "type": "Expression"
                                },
                                "storedProcedureTableTypeParameterName": {
                                    "value": "@concat('', pipeline().parameters.Data_Table_Name)",
                                    "type": "Expression"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ASQL_STG",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Database_Name": {
                                        "value": "@pipeline().parameters.Database_Name",
                                        "type": "Expression"
                                    },
                                    "Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Database_Domain_Name",
                                        "type": "Expression"
                                    },
                                    "Table_Name": {
                                        "value": "@replace(pipeline().parameters.Data_Table_Name,'BASE', 'STG')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ASQL_CDAG_SCD_BASE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Base_Database_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Name",
                                        "type": "Expression"
                                    },
                                    "Base_Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "CD_Load_History_To_Base_Database",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "CD_Load_Data_To_Base_Database",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource"
                            },
                            "sink": {
                                "type": "AzureSqlSink"
                            },
                            "enableStaging": false,
                            "enableSkipIncompatibleRow": true
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ASQL_STG",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Database_Name": "USCQINT07PSDB02",
                                    "Database_Domain_Name": "uscpint000sql01.database.windows.net",
                                    "Table_Name": {
                                        "value": "@concat(replace(pipeline().parameters.Data_Table_Name,'BASE','STG'), '_HIST')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ASQL_BASE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Base_Database_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Name",
                                        "type": "Expression"
                                    },
                                    "Base_Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                        "type": "Expression"
                                    },
                                    "Table_Name": {
                                        "value": "@concat(pipeline().parameters.Data_Table_Name, '_HIST')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "CD_Load_User_Data_To_Base_Database",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "FE_User_Defined_Column",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "sqlWriterStoredProcedureName": "[[dbo].[usp_Load_CDAG_SCD_User_Data_Base]",
                                "sqlWriterTableType": "USER_DEFINED_UNVRSE_BASE_TYPE"
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ASQL_STG",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Database_Name": {
                                        "value": "@pipeline().parameters.Database_Name",
                                        "type": "Expression"
                                    },
                                    "Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Database_Domain_Name",
                                        "type": "Expression"
                                    },
                                    "Table_Name": "[[dbo].[USER_DEFINED_UNVRSE_STG]"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ASQL_User_Base",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Base_Database_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Name",
                                        "type": "Expression"
                                    },
                                    "Base_Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "CD_Load_User_History_Data_To_Base_Database",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "CD_Load_User_Data_To_Base_Database",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource"
                            },
                            "sink": {
                                "type": "AzureSqlSink"
                            },
                            "enableStaging": false,
                            "enableSkipIncompatibleRow": true
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ASQL_STG",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Database_Name": {
                                        "value": "@pipeline().parameters.Database_Name",
                                        "type": "Expression"
                                    },
                                    "Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Database_Domain_Name",
                                        "type": "Expression"
                                    },
                                    "Table_Name": "[[dbo].[USER_DEFINED_UNVRSE_STG_HIST]"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ASQL_BASE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Base_Database_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Name",
                                        "type": "Expression"
                                    },
                                    "Base_Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                        "type": "Expression"
                                    },
                                    "Table_Name": "[[dbo].[USER_DEFINED_UNVRSE_BASE_HIST]"
                                }
                            }
                        ]
                    },
                    {
                        "name": "CD_Update_Client_Source",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "CD_Load_To_Temp_Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECT [CLIENT_SRC_REF_ID]\n      ,[CLIENT_REF_ID]\n      ,[CSR_REF_CD]     \n  FROM [dbo].[CLIENT_SRC_REF_BASE]"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "sqlWriterStoredProcedureName": "[[dbo].[usp_Update_Client_Source]",
                                "sqlWriterTableType": "CLIENT_SRC_REF_TYPE",
                                "storedProcedureParameters": {
                                    "Table_Name": {
                                        "type": "String",
                                        "value": {
                                            "value": "@variables('Table_Name')",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ASQL_BASE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Base_Database_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Name",
                                        "type": "Expression"
                                    },
                                    "Base_Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                        "type": "Expression"
                                    },
                                    "Table_Name": "Update_SourceID"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ASQL_Client_Source_Temp",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Temp_Database_Name": {
                                        "value": "@pipeline().parameters.Temp_Database_Name",
                                        "type": "Expression"
                                    },
                                    "Temp_Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Temp_Database_Domain_Name",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "LKP_Get_Client_Source",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "CD_Update_Client_Source",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT  [CLIENT_SRC_REF_ID], [CLIENT_REF_ID] FROM [', variables('Table_Name'),']')",
                                    "type": "Expression"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_ASQL_Temp",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Temp_Database_Name": {
                                        "value": "@pipeline().parameters.Temp_Database_Name",
                                        "type": "Expression"
                                    },
                                    "Temp_Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Temp_Database_Domain_Name",
                                        "type": "Expression"
                                    },
                                    "Temp_Table_Name": {
                                        "value": "@variables('Table_Name')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "SP_Update_PFAR_In_File_Log_Base",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "CD_Load_History_To_Base_Database",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_Create_Dynamic_Table]",
                            "storedProcedureParameters": {
                                "DSQuery": {
                                    "value": {
                                        "value": "@concat('UPDATE [dbo].[LOAD_FILE_LOG_BASE]\nSET \n[SRC_DATAFLOW_CURRENT_STATUS] = ''PFAR'',\n[SRC_DATAFLOW_REMARKS] = ''Pending for Applying Rules'',\n[SRC_LAST_UPDATED_BY_USERNM] = ''Data-factory'',\n[SRC_LAST_UPDATED_DT_TM] =  GETUTCDATE() \nWHERE [SRC_FILE_ID] = ', pipeline().parameters.File_Source_Id)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase_Base_Database",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "Base_Database_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Name",
                                    "type": "Expression"
                                },
                                "Base_Database_Domain_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "SP_Log_Exception_While_Loading_To_Staging",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "CD_Load_Data_To_Staging",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_Create_Dynamic_Table]",
                            "storedProcedureParameters": {
                                "DSQuery": {
                                    "value": {
                                        "value": "@concat('UPDATE [dbo].[LOAD_FILE_LOG_BASE]\nSET \n[SRC_DATAFLOW_CURRENT_STATUS] = ''ERROR'',\n[SRC_DATAFLOW_REMARKS] = ''Exception occured while loading file data to Staging table'',\n[SRC_LAST_UPDATED_BY_USERNM] = ''Data-factory'',\n[SRC_LAST_UPDATED_DT_TM] =  GETUTCDATE() \nWHERE [SRC_FILE_ID] = ', pipeline().parameters.File_Source_Id)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase_Base_Database",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "Base_Database_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Name",
                                    "type": "Expression"
                                },
                                "Base_Database_Domain_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "SP_Log_Exception_While_Loading_To_Base",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "CD_Load_Data_To_Base_Database",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_Create_Dynamic_Table]",
                            "storedProcedureParameters": {
                                "DSQuery": {
                                    "value": {
                                        "value": "@concat('UPDATE [dbo].[LOAD_FILE_LOG_BASE]\nSET \n[SRC_DATAFLOW_CURRENT_STATUS] = ''ERROR'',\n[SRC_DATAFLOW_REMARKS] = ''Exception occured while loading file data to Base table'',\n[SRC_LAST_UPDATED_BY_USERNM] = ''Data-factory'',\n[SRC_LAST_UPDATED_DT_TM] =  GETUTCDATE() \nWHERE [SRC_FILE_ID] = ', pipeline().parameters.File_Source_Id)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase_Base_Database",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "Base_Database_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Name",
                                    "type": "Expression"
                                },
                                "Base_Database_Domain_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "SP_Log_Exception_While_Loading_User_Data",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "FE_User_Defined_Column",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_Create_Dynamic_Table]",
                            "storedProcedureParameters": {
                                "DSQuery": {
                                    "value": {
                                        "value": "@concat('UPDATE [dbo].[LOAD_FILE_LOG_BASE]\nSET \n[SRC_DATAFLOW_CURRENT_STATUS] = ''ERROR'',\n[SRC_DATAFLOW_REMARKS] = ''Exception occured while loading user defined columns data to Base table'',\n[SRC_LAST_UPDATED_BY_USERNM] = ''Data-factory'',\n[SRC_LAST_UPDATED_DT_TM] =  GETUTCDATE() \nWHERE [SRC_FILE_ID] = ', pipeline().parameters.File_Source_Id)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase_Base_Database",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "Base_Database_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Name",
                                    "type": "Expression"
                                },
                                "Base_Database_Domain_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "SP_Update_Rule_Engine_Request_Queue",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "SP_Update_PFAR_In_File_Log_Base",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "usp_Add_Rule_Engine_Queue",
                            "storedProcedureParameters": {
                                "re_requested_By_User": {
                                    "value": "Data-Factory",
                                    "type": "string"
                                },
                                "re_created_By_User": {
                                    "value": "Data-Factory",
                                    "type": "string"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase_Base_Database",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "Base_Database_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Name",
                                    "type": "Expression"
                                },
                                "Base_Database_Domain_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "SV_SP_Name",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "LKP_Get_Client_Source",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "SP_Name",
                            "value": {
                                "value": "@concat('[dbo].[usp_Load_', replace(pipeline().parameters.Data_Table_Name, 'BASE','STG'), ']')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "CD_Load_To_Temp_Table",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "SP_Create_Temp_Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "BlobSource",
                                "recursive": true
                            },
                            "sink": {
                                "type": "AzureSqlSink"
                            },
                            "enableStaging": false,
                            "translator": {
                                "value": "@pipeline().parameters.columnMapping",
                                "type": "Expression"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ABLB_CSV_DynamicColumn",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ConnectionString": {
                                        "value": "@pipeline().parameters.Azure_Blob_Conn_String",
                                        "type": "Expression"
                                    },
                                    "SourcePath": {
                                        "value": "@pipeline().parameters.Azure_Blob_Source_Path",
                                        "type": "Expression"
                                    },
                                    "Filename": {
                                        "value": "@pipeline().parameters.Filename",
                                        "type": "Expression"
                                    },
                                    "Structure": {
                                        "value": "@pipeline().parameters.sourceStructure",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ASQL_Temp_DynamicStructure",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Temp_Database_Name": {
                                        "value": "@pipeline().parameters.Temp_Database_Name",
                                        "type": "Expression"
                                    },
                                    "Temp_Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Temp_Database_Domain_Name",
                                        "type": "Expression"
                                    },
                                    "Temp_Table_Name": {
                                        "value": "@variables('Table_Name')",
                                        "type": "Expression"
                                    },
                                    "Structure": {
                                        "value": "@pipeline().parameters.sinkStructure",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "SP_Update_Load_FIle_Log_Base",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "LKP_Get_Client_Source",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_Create_Dynamic_Table]",
                            "storedProcedureParameters": {
                                "DSQuery": {
                                    "value": {
                                        "value": "@concat('UPDATE [dbo].[LOAD_FILE_LOG_BASE]\nSET \n[SRC_FILE_ACTIVE_FLAG] = ''Y'',\n[SRC_LAST_UPDATED_BY_USERNM] = ''Data-factory'',\n[SRC_FILE_PROCESSED_FLAG] = ''Y'',\n[SRC_FILE_PROCESSED_DT_TM] = GETUTCDATE()', ',\n[PROTOCOL_REF_ID] = ', pipeline().parameters.Protocol_Ref_Id,' ,\n[SRC_TOTAL_RECORD_RECEIVED] = ', activity('CD_Load_To_Temp_Table').output.rowsRead, ' ,\n[SRC_TOTAL_RECORD_PROCESSED] = ', activity('CD_Load_To_Temp_Table').output.rowsCopied, ',\n[SRC_LAST_UPDATED_DT_TM] =  GETUTCDATE(),',\n'[CLIENT_REF_ID] = ', activity('LKP_Get_Client_Source').output.firstRow.CLIENT_REF_ID,\n',[CLIENT_SRC_REF_ID] = ',activity('LKP_Get_Client_Source').output.firstRow.CLIENT_SRC_REF_ID ,\n ' WHERE [SRC_FILE_ID] = ', pipeline().parameters.File_Source_Id)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase_Base_Database",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "Base_Database_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Name",
                                    "type": "Expression"
                                },
                                "Base_Database_Domain_Name": {
                                    "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "SV_Timestamp",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "SV_SP_Name",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Created_Dt_Tm",
                            "value": {
                                "value": "@utcnow()",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "Filename": {
                        "type": "string",
                        "defaultValue": "CDAG_SGD_001_603376731.csv"
                    },
                    "Azure_Blob_Source_Path": {
                        "type": "string",
                        "defaultValue": "client3"
                    },
                    "Azure_Blob_Conn_String": {
                        "type": "string",
                        "defaultValue": "msistore"
                    },
                    "Database_Name": {
                        "type": "string",
                        "defaultValue": "USCQINT07PSDB02"
                    },
                    "Database_Domain_Name": {
                        "type": "string",
                        "defaultValue": "uscpint000sql01.database.windows.net"
                    },
                    "Protocol_Ref_Id": {
                        "type": "string",
                        "defaultValue": "14"
                    },
                    "File_Source_Id": {
                        "type": "string",
                        "defaultValue": "1102"
                    },
                    "Temp_Database_Name": {
                        "type": "string",
                        "defaultValue": "USCQINT07PSDB02"
                    },
                    "Temp_Database_Domain_Name": {
                        "type": "string",
                        "defaultValue": "uscpint000sql01.database.windows.net"
                    },
                    "File_Header_Row": {
                        "type": "object",
                        "defaultValue": {
                            "Prop_0": "Program Name",
                            "Prop_1": "Universe",
                            "Prop_2": "Year",
                            "Prop_3": "Protocol Effective Begin Date",
                            "Prop_4": "Protocol Effective End Date",
                            "Prop_5": "Client Source",
                            "Prop_6": "Beneficiary First Name",
                            "Prop_7": "Beneficiary Last Name",
                            "Prop_8": "Enrollment Effective Date",
                            "Prop_9": "Cardholder ID",
                            "Prop_10": "Contract ID",
                            "Prop_11": "Plan ID",
                            "Prop_12": "Date Grievance/Complaint was received",
                            "Prop_13": "How was the grievance/complaint received?",
                            "Prop_14": "Category of the grievance/complaint",
                            "Prop_15": "Grievance/ Complaint Description",
                            "Prop_16": "Was this a quality of care grievance?",
                            "Prop_17": "Was a timeframe extension taken?",
                            "Prop_18": "If an extension was taken, did the plan notify the member of the reason(s) for the delay?",
                            "Prop_19": "If the extension was taken because the plan needed more information, did the notice include how the delay was in the best interest of the enrollee?",
                            "Prop_20": "Date oral notification provided to enrollee",
                            "Prop_21": "Date written notification provided to enrollee",
                            "Prop_22": "Resolution Description"
                        }
                    },
                    "Dictionary_Column_Count": {
                        "type": "int",
                        "defaultValue": 23
                    },
                    "Query": {
                        "type": "string",
                        "defaultValue": "[Beneficiary First Name] VARCHAR(MAX), [Beneficiary Last Name] VARCHAR(MAX), [Enrollment Effective Date] VARCHAR(MAX), [Cardholder ID] VARCHAR(MAX), [Contract ID] VARCHAR(MAX), [Plan ID] VARCHAR(MAX), [Date Grievance/Complaint was received] VARCHAR(MAX), [How was the grievance/complaint received?] VARCHAR(MAX), [Category of the grievance/complaint] VARCHAR(MAX), [Grievance/ Complaint Description] VARCHAR(MAX), [Was this a quality of care grievance?] VARCHAR(MAX), [Was a timeframe extension taken?] VARCHAR(MAX), [If an extension was taken, did the plan notify the member of the reason(s) for the delay?] VARCHAR(MAX), [If the extension was taken because the plan needed more information, did the notice include how the delay was in the best intere] VARCHAR(MAX), [Date oral notification provided to enrollee] VARCHAR(MAX), [Date written notification provided to enrollee] VARCHAR(MAX), [Resolution Description] VARCHAR(MAX), "
                    },
                    "Base_Database_Name": {
                        "type": "string",
                        "defaultValue": "USCQINT07PSDB01"
                    },
                    "Base_Database_Domain_Name": {
                        "type": "string",
                        "defaultValue": "uscpint000sql01.database.windows.net"
                    },
                    "Data_Table_Name": {
                        "type": "string",
                        "defaultValue": "CDAG_SGD_STD_GRVNCE_PRTD_BASE"
                    },
                    "Data_Table_Select_Query": {
                        "type": "string",
                        "defaultValue": "[Beneficiary First Name] AS [SGD_BNFIT_FIRST_NM] , [Beneficiary Last Name] AS [SGD_BNFIT_LAST_NM] , [Enrollment Effective Date] AS [SGD_ENRLMNT_EFFCTV_DT] , [Cardholder ID] AS [SGD_CARD_HLDR_ID] , [Contract ID] AS [SGD_ORG_CNTRCT_ID] , [Plan ID] AS [SGD_ORG_PLN_ID] , [Date Grievance/Complaint was received] AS [SGD_CMPLAINT_RCVD_DT] , [How was the grievance/complaint received?] AS [SGD_CMPLAINT_RCVD_METHD] , [Category of the grievance/complaint] AS [SGD_CMPLAINT_CATEGRY] , [Grievance/ Complaint Description] AS [SGD_CMPLAINT_DESCRPT] , [Was this a quality of care grievance?] AS [SGD_QLTYCARE_GRVNC_FLAG] , [Was a timeframe extension taken?] AS [SGD_TMFRAME_EXTN_TKEN_FLAG] , [If an extension was taken, did the plan notify the member of the reason(s) for the delay?] AS [SGD_EXTN_DLAY_NOTIF_RSN_FLAG] , [If the extension was taken because the plan needed more information, did the notice include how the delay was in the best intere] AS [SGD_EXTN_DLAY_BEST_RSN_FLAG] , [Date oral notification provided to enrollee] AS [SGD_ORAL_NOTIF_2ENRLEE_DT] , [Date written notification provided to enrollee] AS [SGD_WRTTN_NOTIF_2ENRLEE_DT] , [Resolution Description] AS [SGD_RESOLTN_DESCRPT] , "
                    },
                    "columnMapping": {
                        "type": "object",
                        "defaultValue": {
                            "type": "TabularTranslator",
                            "columnMappings": {
                                "Beneficiary First Name": "Beneficiary First Name",
                                "Beneficiary Last Name": "Beneficiary Last Name",
                                "Enrollment Effective Date": "Enrollment Effective Date",
                                "Cardholder ID": "Cardholder ID",
                                "Contract ID": "Contract ID",
                                "Plan ID": "Plan ID",
                                "Date Grievance/Complaint was received": "Date Grievance/Complaint was received",
                                "How was the grievance/complaint received?": "How was the grievance/complaint received?",
                                "Category of the grievance/complaint": "Category of the grievance/complaint",
                                "Grievance/ Complaint Description": "Grievance/ Complaint Description",
                                "Was this a quality of care grievance?": "Was this a quality of care grievance?",
                                "Was a timeframe extension taken?": "Was a timeframe extension taken?",
                                "If an extension was taken, did the plan notify the member of the reason(s) for the delay?": "If an extension was taken, did the plan notify the member of the reason(s) for the delay?",
                                "If the extension was taken because the plan needed more information, did the notice include how the delay was in the best interest of the enrollee?": "If the extension was taken because the plan needed more information, did the notice include how the delay was in the best intere",
                                "Date oral notification provided to enrollee": "Date oral notification provided to enrollee",
                                "Date written notification provided to enrollee": "Date written notification provided to enrollee",
                                "Resolution Description": "Resolution Description"
                            }
                        }
                    },
                    "sourceStructure": {
                        "type": "object",
                        "defaultValue": [
                            {
                                "name": "Program Name",
                                "type": "string"
                            },
                            {
                                "name": "Universe",
                                "type": "string"
                            },
                            {
                                "name": "Year",
                                "type": "string"
                            },
                            {
                                "name": "Protocol Effective Begin Date",
                                "type": "string"
                            },
                            {
                                "name": "Protocol Effective End Date",
                                "type": "string"
                            },
                            {
                                "name": "Client Source",
                                "type": "string"
                            },
                            {
                                "name": "Beneficiary First Name",
                                "type": "string"
                            },
                            {
                                "name": "Beneficiary Last Name",
                                "type": "string"
                            },
                            {
                                "name": "Enrollment Effective Date",
                                "type": "string"
                            },
                            {
                                "name": "Cardholder ID",
                                "type": "string"
                            },
                            {
                                "name": "Contract ID",
                                "type": "string"
                            },
                            {
                                "name": "Plan ID",
                                "type": "string"
                            },
                            {
                                "name": "Date Grievance/Complaint was received",
                                "type": "string"
                            },
                            {
                                "name": "How was the grievance/complaint received?",
                                "type": "string"
                            },
                            {
                                "name": "Category of the grievance/complaint",
                                "type": "string"
                            },
                            {
                                "name": "Grievance/ Complaint Description",
                                "type": "string"
                            },
                            {
                                "name": "Was this a quality of care grievance?",
                                "type": "string"
                            },
                            {
                                "name": "Was a timeframe extension taken?",
                                "type": "string"
                            },
                            {
                                "name": "If an extension was taken, did the plan notify the member of the reason(s) for the delay?",
                                "type": "string"
                            },
                            {
                                "name": "If the extension was taken because the plan needed more information, did the notice include how the delay was in the best interest of the enrollee?",
                                "type": "string"
                            },
                            {
                                "name": "Date oral notification provided to enrollee",
                                "type": "string"
                            },
                            {
                                "name": "Date written notification provided to enrollee",
                                "type": "string"
                            },
                            {
                                "name": "Resolution Description",
                                "type": "string"
                            }
                        ]
                    },
                    "sinkStructure": {
                        "type": "object",
                        "defaultValue": [
                            {
                                "name": "Program Name",
                                "type": "string"
                            },
                            {
                                "name": "Universe",
                                "type": "string"
                            },
                            {
                                "name": "Year",
                                "type": "string"
                            },
                            {
                                "name": "Protocol Effective Begin Date",
                                "type": "string"
                            },
                            {
                                "name": "Protocol Effective End Date",
                                "type": "string"
                            },
                            {
                                "name": "Client Source",
                                "type": "string"
                            },
                            {
                                "name": "Beneficiary First Name",
                                "type": "string"
                            },
                            {
                                "name": "Beneficiary Last Name",
                                "type": "string"
                            },
                            {
                                "name": "Enrollment Effective Date",
                                "type": "string"
                            },
                            {
                                "name": "Cardholder ID",
                                "type": "string"
                            },
                            {
                                "name": "Contract ID",
                                "type": "string"
                            },
                            {
                                "name": "Plan ID",
                                "type": "string"
                            },
                            {
                                "name": "Date Grievance/Complaint was received",
                                "type": "string"
                            },
                            {
                                "name": "How was the grievance/complaint received?",
                                "type": "string"
                            },
                            {
                                "name": "Category of the grievance/complaint",
                                "type": "string"
                            },
                            {
                                "name": "Grievance/ Complaint Description",
                                "type": "string"
                            },
                            {
                                "name": "Was this a quality of care grievance?",
                                "type": "string"
                            },
                            {
                                "name": "Was a timeframe extension taken?",
                                "type": "string"
                            },
                            {
                                "name": "If an extension was taken, did the plan notify the member of the reason(s) for the delay?",
                                "type": "string"
                            },
                            {
                                "name": "If the extension was taken because the plan needed more information, did the notice include how the delay was in the best intere",
                                "type": "string"
                            },
                            {
                                "name": "Date oral notification provided to enrollee",
                                "type": "string"
                            },
                            {
                                "name": "Date written notification provided to enrollee",
                                "type": "string"
                            },
                            {
                                "name": "Resolution Description",
                                "type": "string"
                            }
                        ]
                    }
                },
                "variables": {
                    "PropertyNo1": {
                        "type": "String",
                        "defaultValue": "0"
                    },
                    "PropertyNo2": {
                        "type": "String",
                        "defaultValue": "0"
                    },
                    "Table_Name": {
                        "type": "String"
                    },
                    "Query1": {
                        "type": "String"
                    },
                    "Query2": {
                        "type": "String"
                    },
                    "Property_Name": {
                        "type": "String",
                        "defaultValue": "Prop_0"
                    },
                    "IsColumnAvailable": {
                        "type": "Boolean",
                        "defaultValue": true
                    },
                    "Dictionary_Columns": {
                        "type": "Array"
                    },
                    "User_Columns": {
                        "type": "Array"
                    },
                    "Client_Ref_Id": {
                        "type": "String"
                    },
                    "Client_Src_Ref_Id": {
                        "type": "String"
                    },
                    "SP_Name": {
                        "type": "String"
                    },
                    "SP_User_Data": {
                        "type": "String"
                    },
                    "Created_Dt_Tm": {
                        "type": "String"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Temporary_Database')]",
                "[concat(variables('factoryId'), '/datasets/DS_ASQL_Temp')]",
                "[concat(variables('factoryId'), '/datasets/DS_ASQL_CDAG_STG')]",
                "[concat(variables('factoryId'), '/datasets/DS_ASQL_STG')]",
                "[concat(variables('factoryId'), '/datasets/DS_ASQL_CDAG_SCD_BASE')]",
                "[concat(variables('factoryId'), '/datasets/DS_ASQL_BASE')]",
                "[concat(variables('factoryId'), '/datasets/DS_ASQL_User_Base')]",
                "[concat(variables('factoryId'), '/datasets/DS_ASQL_Client_Source_Temp')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Base_Database')]",
                "[concat(variables('factoryId'), '/datasets/DS_ABLB_CSV_DynamicColumn')]",
                "[concat(variables('factoryId'), '/datasets/DS_ASQL_Temp_DynamicStructure')]",
                "[concat(variables('factoryId'), '/datasets/DS_ASQL_CDAG_SCD_USER')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_Trigger_Rules_Engine')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "LKP_Get_New_Requests",
                        "description": "Get records with New or failed status from RULE_ENGINE_REQUEST_QUEUE",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECT RE_QUEUE_ID,\nCLIENT_REF_ID, SRC_FILE_ID, PROTOCOL_REF_ID FROM RULE_ENGINE_REQUEST_QUEUE WHERE RE_STATUS  IN ('New', 'Failed') "
                            },
                            "dataset": {
                                "referenceName": "DS_ASQL_BASE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Base_Database_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Name",
                                        "type": "Expression"
                                    },
                                    "Base_Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                        "type": "Expression"
                                    },
                                    "Table_Name": "RULE_ENGINE_REQUEST_QUEUE "
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "FE_For_Each_Request",
                        "description": "Trigger rules engine For each record in RULE_ENGINE_REQUEST_QUEUE in New or failed status",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "LKP_Get_New_Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LKP_Get_New_Requests').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "AF_Trigger_Business_Rule",
                                    "description": "Trigger business rules",
                                    "type": "AzureFunctionActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "functionName": {
                                            "value": "@pipeline().parameters.Azure_Function_Name",
                                            "type": "Expression"
                                        },
                                        "method": "POST",
                                        "headers": {
                                            "X-COPA-TENANT": {
                                                "value": "@string(item().CLIENT_REF_ID)",
                                                "type": "Expression"
                                            },
                                            "X-COPA-FILEID": {
                                                "value": "@string(item().SRC_FILE_ID)",
                                                "type": "Expression"
                                            },
                                            "X-COPA-PROTOCOL": {
                                                "value": "@string(item().PROTOCOL_REF_ID)",
                                                "type": "Expression"
                                            }
                                        },
                                        "body": {
                                            "value": "@concat('{\n   \"RequestQueueId\":\"',item().RE_QUEUE_ID,'\"\n}')",
                                            "type": "Expression"
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS_Azure_Functions",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "FE_For_Each_Request_Auto_Assign_Issues",
                        "description": "Trigger rules engine For each record in RULE_ENGINE_REQUEST_QUEUE in New or failed status",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Wait_For_BRE_Completion",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LKP_Get_New_Requests').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "SP_Auto_Assign_Issues",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_set_auto_assign_task]",
                                        "storedProcedureParameters": {
                                            "client_ref_id": {
                                                "value": {
                                                    "value": "@item().CLIENT_REF_ID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "protcol_ref_id": {
                                                "value": {
                                                    "value": "@item().PROTOCOL_REF_ID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Wait_For_BRE_Completion",
                        "type": "Wait",
                        "dependsOn": [
                            {
                                "activity": "FE_For_Each_Request",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "waitTimeInSeconds": 15
                        }
                    },
                    {
                        "name": "LKP_Get_MQIDs",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "FE_For_Each_Request_Auto_Assign_Issues",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "Select MQ_ID from MAIL_QUEUE WITH(NOLOCK) WHERE COMMENTS ='AUTO ASSIGN' and MQ_STATUS ='PENDING' and MQ_SENDFLAG='Y' "
                            },
                            "dataset": {
                                "referenceName": "DS_ASQL_BASE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Base_Database_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Name",
                                        "type": "Expression"
                                    },
                                    "Base_Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                        "type": "Expression"
                                    },
                                    "Table_Name": "a"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "FE_For_Each_MQID",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "LKP_Get_MQIDs",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LKP_Get_MQIDs').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "AZ_Trigger_Email",
                                    "type": "AzureFunctionActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "functionName": {
                                            "value": "@concat('EmailNotifications?eqid=', item().MQ_ID)",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {},
                                        "body": {
                                            "value": "@concat('{\n   \"eqid\":\"',item().MQ_ID,'\"\n}')",
                                            "type": "Expression"
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AF_Trigger_Email",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "FE_ForEach_Get_Source_File_Id",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Wait_For_BRE_Completion",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LKP_Get_New_Files').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "SV_SRC_ID",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "SRC_FILE_ID_1",
                                        "value": {
                                            "value": "@CONCAT(item().SRC_FILE_ID,',',  variables('SRC_FILE_ID_2') )",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SV_SRC_ID2",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SV_SRC_ID",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "SRC_FILE_ID_2",
                                        "value": {
                                            "value": "@variables('SRC_FILE_ID_1')",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "LKP_Get_New_Files",
                        "description": "Get records with New or failed status from RULE_ENGINE_REQUEST_QUEUE",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "LKP_Get_New_Requests",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECT SRC_FILE_ID FROM RULE_ENGINE_REQUEST_QUEUE WHERE RE_STATUS  IN ('New', 'Failed') AND SRC_FILE_ID IN (SELECT SRC_FILE_ID FROM RULE_ENGINE_REQUEST_QUEUE  GROUP BY SRC_FILE_ID HAVING COUNT(SRC_FILE_ID) = 1)"
                            },
                            "dataset": {
                                "referenceName": "DS_ASQL_BASE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Base_Database_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Name",
                                        "type": "Expression"
                                    },
                                    "Base_Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                        "type": "Expression"
                                    },
                                    "Table_Name": "RULE_ENGINE_REQUEST_QUEUE "
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "IF_Have_New_Files",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "FE_ForEach_Get_Source_File_Id",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(activity('LKP_Get_New_Files').output.count,0)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "SP_Prepare_Mail_Request",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[usp_Prepare_Mail_Queue_Request]",
                                        "storedProcedureParameters": {
                                            "FilesIds": {
                                                "value": {
                                                    "value": "@substring(variables('SRC_FILE_ID_2'), 0, lastindexof(variables('SRC_FILE_ID_2'),','))",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "MQ_cc": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "MQ_CreatedBy": {
                                                "value": {
                                                    "value": "Admin",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "MQ_From": {
                                                "value": "EYCOPA.PBI@eymsprod.onmicrosoft.com",
                                                "type": "String"
                                            },
                                            "MQ_TaskId": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "MQ_TemplateId": {
                                                "value": "3",
                                                "type": "Int32"
                                            },
                                            "MQ_To": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "PRQ_ID": {
                                                "value": null,
                                                "type": "Int32"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Base_Database",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "Base_Database_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Name",
                                                "type": "Expression"
                                            },
                                            "Base_Database_Domain_Name": {
                                                "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "LKP_Get_MQID",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "IF_Have_New_Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "Select MQ_ID from MAIL_QUEUE WITH(NOLOCK) WHERE COMMENTS ='BULK UPLOAD' and MQ_STATUS ='PENDING' and MQ_SENDFLAG='Y' "
                            },
                            "dataset": {
                                "referenceName": "DS_ASQL_BASE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Base_Database_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Name",
                                        "type": "Expression"
                                    },
                                    "Base_Database_Domain_Name": {
                                        "value": "@pipeline().parameters.Base_Database_Domain_Name",
                                        "type": "Expression"
                                    },
                                    "Table_Name": "a"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "FE_For_Each_MQID_Send_Mail",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "LKP_Get_MQID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LKP_Get_MQID').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "AZ_Trigger_Email_copy1",
                                    "type": "AzureFunctionActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "functionName": {
                                            "value": "@concat('EmailNotifications?eqid=', item().MQ_ID)",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {},
                                        "body": {
                                            "value": "@concat('{\n   \"eqid\":\"',item().MQ_ID,'\"\n}')",
                                            "type": "Expression"
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AF_Trigger_Email",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "Base_Database_Name": {
                        "type": "string",
                        "defaultValue": "USCQINT07PSDB01"
                    },
                    "Base_Database_Domain_Name": {
                        "type": "string",
                        "defaultValue": "uscpint000sql01.database.windows.net"
                    },
                    "Azure_Function_Name": {
                        "type": "string",
                        "defaultValue": "C_RuleEngineActivator"
                    }
                },
                "variables": {
                    "protocol": {
                        "type": "String"
                    },
                    "client": {
                        "type": "String"
                    },
                    "file": {
                        "type": "String"
                    },
                    "SRC_FILE_ID_1": {
                        "type": "String"
                    },
                    "SRC_FILE_ID_2": {
                        "type": "String"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_ASQL_BASE')]",
                "[concat(variables('factoryId'), '/linkedServices/LS_Azure_Functions')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Base_Database')]",
                "[concat(variables('factoryId'), '/linkedServices/AF_Trigger_Email')]"
            ]
        }
    ]
}